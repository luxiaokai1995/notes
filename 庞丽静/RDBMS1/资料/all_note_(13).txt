庞老师
静静
   panglj@tedu.cn

tmooc  PPT   案例1 



++++++RDBMS1-DAY01
1 数据库相关概念？ 
2 搭建MySQL数据库服务器？ 装包 修改配置文件 启动服务 登陆
3 数据库服务的基本使用？ 库 表 记录 select delete update insert
4 mysql数据库类型


++++++RDBMS1-DAY02
连接数据库服务器 
创建db2库

在db2库 
里创建 myself 表  有3个字段 分别是
name 姓名
age 年龄
sex 性别

把自己的信息记录到表里
				时间10分钟 到 09：18 
mysql> create database db2;
mysql> use db2;
mysql> create table myself(name char(20), age tinyint unsigned,sex  enum("boy","girl") );

mysql> insert into  myself values("yaya",19,"girl");
mysql> select * from  myself;


一、表结构
	1.1 字段约束条件  (控制字段赋值) Null | Key | Default | Extra


	1.2 修改表结构
		alter  table  表名  执行动作；
		add(after/first) modify  change  drop  rename

二、mysql键值
	普通索引 index   *** 使用规则 使用（创建查看删除）
	唯一索引 unique
	主键 primary key ***使用规则 使用（创建查看删除）
	外键 foreign key ***使用规则 使用（创建查看删除）
	全文索引 fulltext	

PRI   PRI
姓名  班级  	缴费状态
name class   	status
bob   nsd1904   no
员工信息表yginfo
  员工编号     姓名
    yg_id      name
	1      bob
	2      alice
	3      tom
create table  yginfo(
yg_id int primary key auto_increment,
name  char(20)
)engine=innodb;

insert into  yginfo(name)values("bob");
insert into  yginfo(name)values("alice");
insert into  yginfo(name)values("tom");

select  * from yginfo;

工资表 gzb
      gz_id  pay
     员工编号  工资 
	
create table gzb(
gz_id int,
pay  float(7,2),
foreign key(gz_id) references yginfo(yg_id) on update cascade 
on delete cascade
)engine=innodb;

show create table gzb\G;

+++++++++++RDBMS1_DAY03
1、数据导入导出
	检索目录
		查看默认检索目录
		mysql> show variables like  "secure_file_priv";
		修改检索目录
			]# mkdir  /myload  
			]# chown  mysql  /myload
			]# vim  /etc/my.cnf
     			[mysqld]
     			secure_file_priv="/myload“
			:wq
			]# systemctl  restart mysqld
		mysql> show variables like  "secure_file_priv";

	数据导入:把系统文件的内容存储到表里

		 命令：mysql>  load  data  infile   "目录名/文件名" 
into   table  库名.表名 fields terminated   by   "分隔符" lines  terminated  by   "\n";

		例子：把/etc/passwd 文件的内容存储到db3库下的user表里。

mysql> create database db3;
Query OK, 1 row affected (0.00 sec)

mysql> use db3;

			mysql> create table  user(
    -> name char(50),
    -> password char(1),
    -> uid int,
    -> gid int,
    -> comment char(150),
    -> homedir  char(100),
    -> shell  char(100)
    -> );

mysql> system  cp /etc/passwd  /myload/

mysql> load data infile "/myload/passwd" into table db3.user  fields terminated by  ":" lines terminated by  "\n";

mysql> alter table db3.user add  id int primary key  auto_increment first;

mysql> select  * from db3.user where  id=1;
mysql> select  * from db3.user where  id<=5;
		10:10 上课。

	数据导出: 把表记录保存到系统文件里。
	
	命令1 mysql>  SQL查询命令 into  outfile  "目录/文件名" ；

	命令2 mysql>  SQL查询命令 into  outfile  "目录/文件名" fields terminated by "分隔符"；

	命令3 mysql>  SQL查询命令 into  outfile  "目录/文件名" fields terminated by "分隔符"   lines   terminated   by   “\n” ；


mysql> select  * from db3.user where  id<=5 into outfile  "/myload/user.txt" ;

mysql> select  * from db3.user where  id<=5 into outfile  "/myload/user.txt" 
    -> fields terminated by "###"\c

mysql> select  name,shell,uid  from db3.user where id<=3  into outfile  "/myload/user3.txt" fields terminated by "###" lines  terminated by "?";

mysql>system  cat /myload/user.txt;
mysql>system  cat /myload/user1.txt;
mysql>system  cat /myload/user2.txt;
					练习到10：30 
2、管理表记录
	插入表记录 insert into 库.表 values(值列表);

mysql> 
insert into db3.user 
values(22,"bob","x",2000,2000,"test user","/home/bob","/bin/bash");

insert into db3.user 
values
(25,"tom","x",2001,2001,"test user","/home/tom","/bin/bash"),
(26,"lucy","x",2002,2002,"test user","/home/lucy","/bin/bash");

mysql> insert into db3.user(name)values("alice");

mysql> insert into db3.user(name)values("jerry"),("mack"),("rose");


	查询表记录 select * from  库.表;

		select   字段1, .. .., 字段N  from  库名.表名;

		mysql> select name,shell from db3.user;
		mysql> select * from db3.user;

select  字段1, .. , 字段N  from  库名.表名  where   条件表达式;
		
		mysql> select name,shell from db3.user where id <= 2 ;
		mysql> select * from db3.user where id <= 2 ;


	更新表记录 update  库.表 set 字段名=值；
		
mysql> select password,comment from db3.user;
mysql> update db3.user  set    password="a" , comment="student" ;
mysql> select password,comment from db3.user;

mysql> update db3.user set password="x" , comment="root" where name="root";
mysql> select password,comment from db3.user;
mysql> select  * from db3.user where name="root";

	练习时间 5分钟 到 11：33 

	删除表记录 delete from 库.表；
			mysql> select  * from db3.user;
			mysql> delete from db3.user where id >=25;
			mysql> delete from db3.user where id =23;

3、匹配条件
	3.1 基本匹配条件 （select  、update 、delete）
		数值比较: =  !=  >  >=  <  <=  

mysql> select name from db3.user where uid=20;
mysql> select name from db3.user where uid=0;
mysql> select name,uid from db3.user where uid<=10;

		字符比较: =  !=
mysql> select name from db3.user where  shell = "/bin/bash";
mysql> select name , shell from db3.user where  shell != "/bin/bash";


mysql> select name,comment from db3.user where name = comment;
mysql> select name,uid,gid from db3.user where uid = gid;
		is    null  空
		is not  null  非空
mysql> insert into  db3.user(name) values(null),(NULL),(""),("null");
mysql> select id, name  from db3.user  where name is not null;
mysql> select id, name  from db3.user  where name is  null;
		逻辑匹配(多个判断条件)
		逻辑与 and  或 &&    多个条件必须同时成立
		逻辑或 or  或  ||    多个条件某1个条件成立即可
		逻辑非 ！ not        取反
mysql> select name,uid from db3.user where name="root"  and  uid=3;
mysql> select name,uid from db3.user where name="root"  or  uid=3;
		范围内匹配
mysql> select name from db3.user where  name in ("adm","sync","mysql","bin");
mysql> select name,uid from db3.user where  uid in (12,70,23);
mysql> select name,shell from db3.user where shell not in ("/bin/bash","/sbin/nologin");
mysql> select  * from db3.user where uid between 10 and 20 ;
	去重显示		
mysql> select  distinct shell  from db3.user;
						练习15分钟到 14：35

	3.2 高级匹配条件
		模糊查询 like
		where 字段名 like  '表达式' ;
			_ 表示1个字符

			% 表示零个或多个字符

mysql> select name from db3.user where  name  like  '___';
mysql> select name from db3.user where  name  like  '____';
mysql> select name from db3.user where  name  like  '%a%';
mysql> select name from db3.user where  name  like  '__%__';

		正则表达式 regexp
		where 字段名  regexp   '正则表达式'
		^  $  .  *  []  |

mysql> select name from db3.user  where name  regexp '^a';
mysql> select name from db3.user  where name  regexp 't$';
mysql> select name from db3.user  where name  regexp '^a|t$';
mysql> select name from db3.user  where name  regexp '^r.*t$';
mysql> insert into  db3.user(name)values("yaya9"),("y8aya"),("ya6ya");
mysql> select name from  db3.user where name regexp '[0-9]';

		四则运算 + - * / %

mysql> alter table db3.user 
    -> add   system  int  default 80 ,
    -> add   mysql   int  default 80 ;

mysql> alter table db3.user 
    -> add  age  tinyint default 19 after name;

mysql> select  * from db3.user where name="root";

mysql> select name,age, 2019 - age  csyf  from db3.user ;

mysql> select name ,uid  from  db3.user where uid%2  =  0 ;
mysql> select name ,uid  from  db3.user where uid%2  !=  0 ;

mysql> select name,uid from db3.user where  uid  <=10;
mysql> update db3.user set  uid=uid+1 where uid  <=10;
		
		() 提高优先级
mysql> select name,system,mysql, system+mysql zfs , (system+mysql)/2 pzf  from db3.user where name="root";
		

	3.3  操作查询结果
		 1 聚集函数 (mysql服务内置对数据做统计的命令)
		avg() min() max() sum() count()

			mysql> select max(uid) from db3.user;
			mysql> select min(uid) from db3.user;
			mysql> select avg(uid) from db3.user;
			mysql> select sum(uid) from db3.user;
			
mysql> select name from  db3.user 
	   where shell not in ("/bin/bash","/sbin/nologin");

mysql> select count(name) from  db3.user 
           where shell not in ("/bin/bash","/sbin/nologin");

mysql> select  * from db3.user;
mysql> select  count(*) from db3.user;

		2 查询结果排序 order by  字段名  asc|desc

mysql> select name , uid  from  db3.user where  uid >= 10  and  uid <= 1000 ;


mysql> select name , uid  from  db3.user 
                where  uid >= 10  and  uid <= 1000  order by  uid;

mysql> select name , uid  from  db3.user
                where  uid >= 10  and  uid <= 1000  order by  uid desc ;

	     3  查询结果分组 group  by 字段名；
mysql> select   shell  from  db3.user;
mysql> select   shell  from  db3.user  group by shell;

mysql> select   shell  from  db3.user where  uid <= 500;
mysql> select   shell  from  db3.user where  uid <= 500 group by shell;

	    4 查询结果过滤 having 条件

mysql> select name  from  db3.user where  shell != "/bin/bash"

mysql> select name  from  db3.user where  shell != "/bin/bash"
	having  name="mysql";

	   5 限制查询结果显示行数 limit

mysql> select  id,name,shell,homedir  from  db3.user where uid <= 15;

mysql> select  id,name,shell,homedir  from  db3.user 
		where uid <= 15 limit 3;

mysql> select  id,name,shell,homedir  from  db3.user 
		where uid <= 15 limit 1;

mysql> select  id,name,shell,homedir  from  db3.user
		where uid <=15  limit 0,3;

mysql> select  id,name,shell,homedir  from  db3.user 
		where uid <=15  limit 3,3;

4、MySQL管理工具
	4.1 安装图形工具phpmyadmin

++++++RDBMS1_day04
	192.168.4.50   192.168.4.51
1、用户授权
	1.1 授权： 添加用户并设置权限
	1.2 命令格式 mysql> grant 
    grant  权限列表  on   库名  to  用户名@”客户端地址” 
    identified  by  “密码” //授权用户密码
    with  grant  option ;    //有授权权限 ,可选项

        1.3  授权库 mysql (授权信息)
		user表    记录已有的授权用户及权限

select host , user from  mysql.user;
show grants for  "mysql.sys"@"localhost";
mysql> show  grants  for  admin2@"localhost";


		db表       记录已有授权用户对数据库的访问权限
mysql> update mysql.db set Delete_priv="N"  where db="db3" and user="admin2" and host="localhost"\G;

mysql> flush privileges;

mysql> show  grants  for  admin2@"localhost"; 

mysql> select  * from  mysql.db  where db="db3" and user="admin2" and host="localhost"\G; 


		tables_priv表       记录已有授权用户对表的访问权限

mysql> select host , db  , user  ,table_name from  mysql.tables_priv;
		
mysql> select  * from  mysql.tables_priv where user="admin"\G;

mysql> show grants for  admin@"192.168.4.%";

		columns_priv表   记录已有授权用户对字段的访问权限
mysql> grant select,update(name , uid ) on  db3.user  to yaya99@"%"
    -> identified by "123qqq...A";

mysql> show grants for  yaya99@"%";

mysql> select  * from  mysql.columns_priv \G;
		
		1.4 删除授权用户
			mysql> drop user yaya99@"%" ;
			mysql> select user ,host from mysql.user;

		1.5 撤销权限 （删除用户的访问权限）
			命令格式：
			mysql> revoke  权限列表  on  库名.表   from    
             用户名@"客户端地址";

		mysql> revoke grant option on  *.* from mydba@"%" ;
		mysql> show  grants  for  mydba@"%" ;
		mysql> revoke  drop ,delete  on *.*  from  mydba@"%" ;
		mysql> show  grants  for  mydba@"%" ;
		mysql> revoke  all  on *.*  from  mydba@"%" ;
		mysql> show  grants  for  mydba@"%" ;

		1.4  恢复root密码   练习时间10分钟到 14：28
]# vim /etc/my.cnf
   [mysqld]
    skip-grant-tables
   :wq
]# systemctl restart mysqld

]# mysql
mysql> select user,host , authentication_string from mysql.user;
mysql> update  mysql.user set  authentication_string=password("aaa123...A")
       where user="root" and host="localhost";

mysql> flush privileges;
mysql> exit

]# vim /etc/my.cnf
    [mysqld]
      #skip-grant-tables
   :wq
]# systemctl restart mysqld
]# mysql -uroot -paaa123...A
mysql> show databases;
		1.5 修改数据库管理员root 用户本机登陆密码
		
[root@host50 ~]# mysqladmin  -uroot -p  password "123456"
Enter password: 	输入旧密码

	     ]# mysql  -uroot -p123456   //使用修改的密码登陆


2、完全备份
	2.1 相关概念
	
	2.2 物理备份与恢复  练习时间6分钟 到 15：01 
	           物理备份 192.168.4.50
]# mkdir /dbbak
]# cp  -r /var/lib/mysql  /dbbak/mysql.bak
]# ls /dbbak/mysql.bak/
]# scp -r /dbbak/mysql.bak  root@192.168.4.51:/root/

	           物理恢复 192.168.4.51
]# systemctl  stop mysqld
]# rm -rf /var/lib/mysql
]# cp -r /root/mysql.bak/  /var/lib/mysql
]# chown  -R mysql:mysql /var/lib/mysql
]# systemctl  start mysqld
]#mysql -uroot -p123qqq...A
mysql> show databases;	


	完全备份 mysqldump 
	]# mysqldump -uroot -p123qqq...A  --all-databases > /dbbak/all.sql
	]# mysqldump -uroot -p123qqq...A  db3 > /dbbak/db3.sql
	]# mysqldump -uroot -p123qqq...A  db3 user > /dbbak/db3_user.sql
	]# mysqldump -uroot -p123qqq...A  -B db3 db4 > /dbbak/twodb.sql

	]# ls /dbbak/*.sql

	]# cat /dbbak/db3.sql
	
	]# scp  /dbbak/twodb.sql  root@192.168.4.51:/root/
	完全恢复 192.168.4.51
	]# mysql -uroot -p123qqq...A
	mysql> drop  database  db3;
	mysql> drop  database  db4;
	mysql> show  databases;
	mysql> exit

	]# mysql -uroot -p123qqq...A <  /root/twodb.sql
	]# mysql -uroot -p123qqq...A
	mysql> show  databases;
	mysql> use db3;
	mysql> show  tables;
	mysql> select count(*) from user;

3、增量备份 (启用mysql服务的binlog日志文件)

	3.1 binlog日志的使用
		1、binlog日志介绍

		2、启用日志
	]# vim /etc/my.cnf
		[mysqld]
		server_id=50
		log-bin
	:wq

	]# systemctl  restart mysqld
	]# cd /var/lib/mysql
	]# ls  *-bin.*
host50-bin.000001  host50-bin.index

		3、手动创建新的日志文件
   ]# systemctl  restart mysqld
   ]# systemctl  restart mysqld

   ]# mysql -uroot -p123qqq...A  -e "show databases"
   ]# mysql -uroot -p123qqq...A  -e "flush logs"

   ]# mysql -uroot -p123qqq...A 
      mysql> flush  logs;
      mysql> flush  logs;

   ]# mysqldump -uroot -p123qqq...A  --flush-logs  db3 > /dbbak/db3.sql

		删除已有的日志文件
mysql> purge  master  logs  to  "host50-bin.000003";

mysql> reset  master ;
		
mysql> show  master status;
	

		4、修改日志记录格式
]# vim /etc/my.cnf
 [mysqld]
  binlog_format="mixed"
:wq

]# systemctl restart  mysqld
]# mysql  -uroot -p123qqq...A
mysql> 
mysql> show  variables like  "binlog_format";
+---------------+-------+
| Variable_name | Value |
+---------------+-------+
| binlog_format | MIXED |
+---------------+-------+
1 row in set (0.00 sec)

mysql> reset master;
mysql> show  master status;


		5、查看日志内容		
  108  mysqlbinlog /var/lib/mysql/host50-bin.000001 | grep -i create
  109  mysqlbinlog /var/lib/mysql/host50-bin.000001 | grep -i insert
  110  mysqlbinlog /var/lib/mysql/host50-bin.000001 | grep -i select
  111  mysqlbinlog /var/lib/mysql/host50-bin.000001 | grep -i update
  112  mysqlbinlog /var/lib/mysql/host50-bin.000001 | grep -i delete
  113  mysqlbinlog /var/lib/mysql/host50-bin.000001 | grep -i desc

	3.2 修改日志文件的存储位置及文件命令 练习时间6分钟到 09：14
  115  mkdir /mylog
  116  chown  mysql /mylog
  117  ls -ld /mylog/

  118  vim /etc/my.cnf
	  [mysqld]
		binlog_format="mixed"
		server_id=50
		log-bin=/mylog/db50
	:wq

  119  systemctl  restart mysqld
  120  ls /mylog/db50.*
[root@host50 ~]# mysql -uroot  -p123qqq...A
mysql> show  master status;
mysql> select count(*) from db3.user;
mysql>exit

]# mysqldump  -uroot  -p123qqq...A  db3  > /dbbak/db3.sql
]# scp /dbbak/db3.sql  root@192.168.4.51:/root/

192.168.4.51:
	 ]# mysql  -uroot  -p123qqq...A
	 mysql> show databases;
	 mysql> create database db3; (没有库时创建)
	 mysql> exit;
	 ]# mysql  -uroot  -p123qqq...A  db3 < /root/db3.sql
	 ]# mysql  -uroot  -p123qqq...A
	 mysql> select count(*) from db3.user;

192.168.4.50:
	]# mysql  -uroot  -p123qqq...A
	mysql> show  master status;
insert into db3.user(name,uid)values("dc",201)
insert into db3.user(name,uid)values("dc2",201)
insert into db3.user(name,uid)values("dc3",201)
insert into db3.user(name,uid)values("dc4",201)
insert into db3.user(name,uid)values("dc5",201)
	mysql> show master status;
	mysql> select count(*) from db3.user;

		3.3 日志文件如何区分记录的多条SQL命令
			偏移量
			时间点
[root@host50 ~]# scp  /mylog/db50.000001   root@192.168.4.51:/root/

	3.2 使用binlog日志恢复数据
	     命令格式
	     ]# mysqlbinlog  日志文件名   | mysql -uroot -p密码
	     ]# mysqlbinlog 选项  日志文件名 | mysql -uroot -p密码
		选项 
		--start-position=数字 --stop-position=数字 
--start-datetime=“yyyy-mm-dd hh:mm:ss” --stop-datetime="yyyy-mm-dd hh:mm:ss"
[root@mysql51 ~]# mysqlbinlog  /root/db50.000001 | mysql -uroot -p123qqq...A

[root@mysql51 ~]# mysql -uroot -p123qqq...A
mysql> select  count(*) from  db3.user;
mysql> select name from db3.user where name like  'dc%";

		休息到10：15；
192.168.4.50:
mysql> show master status;
mysql> insert into db3.user(name,uid)values("aa",301);
mysql> insert into db3.user(name,uid)values("aaa",301);
mysql> insert into db3.user(name,uid)values("aaaa",301);
mysql> insert into db3.user(name,uid)values("aaaaa",301);
mysql> insert into db3.user(name,uid)values("aaaaaa",301);
mysql> delete  from  db3.user where  name regexp '^aa.*';
mysql> show master status;

[root@host50 ~]# scp /mylog/db50.000001  root@192.168.4.51:/tmp/


192.168.4.51:
[root@mysql51 ~]# mysqlbinlog --start-position=2232 --stop-position=3656  /tmp/db50.000001  |  mysql -uroot  -p123qqq...A

]# mysql -uroot  -p123qqq...A
mysql> select name from  db3.user where name  regexp   '^aa.*';

		练习到 10：46 

192.168.4.50：
[root@mysql50 ~]# mysqlbinlog --start-position=2232 --stop-position=3656  /tmp/db50.000001  |  mysql -uroot  -p123qqq...A

]# mysql -uroot  -p123qqq...A
mysql> select name  from  db3.user where name  regexp   '^aa.*';

+++++RDBMS1_DAY05 -----数据备份与恢复（percona）
1.percona软件介绍

2 在192.168.4.50 主机安装percona软件

]# scp /linux-soft/03/mysql/libev-4.15-1.el6.rf.x86_64.rpm \
> root@192.168.4.50:/root/

]# scp /linux-soft/03/mysql/percona-xtrabackup-24-2.4.7-1.el7.x86_64.rpm  root@192.168.4.50:/root/

]# rpm -ivh libev-4.15-1.el6.rf.x86_64.rpm 
]# yum -y  install percona-xtrabackup-24-2.4.7-1.el7.x86_64.rpm 
]# rpm -qa  | grep  -i percona
]# rpm -ql percona-xtrabackup-24
]# innobackupex --help
]# man innobackupex

3 使用innobackupex 对数做备份和恢复
	3.1 命令格式
			]# innobackupex  <选项>
	3.2 常用选项
		--user  --password  --no-timestamp --apply-log 
		--copy-back 

	3.3 完全备份与恢复
50 ]#innobackupex  --user root --password 123qqq...A   /allbak --no-timestamp
50 ]# ls  /allbak
50 ]# scp -r  /allbak  root@192.168.4.51:/root/


51 ]# rpm -ivh libev-4.15-1.el6.rf.x86_64.rpm 
51 ]# yum -y  install percona-xtrabackup-24-2.4.7-1.el7.x86_64.rpm 

[root@host51 ~]# systemctl  stop mysqld
[root@host51 ~]# rm -rf /var/lib/mysql/*
[root@host51 ~]# ls /var/lib/mysql


[root@host51 ~]# innobackupex  --apply-log  /root/allbak/
]# cat /root/allbak/xtrabackup_checkpoints 
]# innobackupex  --copy-back  /root/allbak/
]# ls /var/lib/mysql -l
]# chown  -R mysql:mysql /var/lib/mysql

]# systemctl  start mysqld
]# mysql -uroot -p123qqq...A
mysql> show databases ;  select  * from db5.a ; select  * from db5.b;

		时间10分钟 到 15：40 

	3.2 恢复完全备份中的单张表

50]# mysql  -uroot  -p123qqq...A
mysql> use db5;
mysql> show tables;
mysql> select  * from a;
mysql> select  * from b;
mysql> delete from b;
mysql> select  * from b; select  * from a;
mysql> show  tables;

	使用备份文件恢复b表的数据

mysql> alter  table db5.b discard  tablespace; 		
mysql> system ls /var/lib/mysql/db5/b.*
mysql> desc b;
mysql> select  * from  b;


]# innobackupex --apply-log --export  /allbak
]# ls /allbak/db5/


]# cp /allbak/db5/b.{cfg,exp,ibd} /var/lib/mysql/db5/
]# chown mysql:mysql /var/lib/mysql/db5/b.*
]# ls -l /var/lib/mysql/db5/b.*

mysql>  alter  table  db5.b  import  tablespace;

mysql> system rm -rf  /var/lib/mysql/db5/b.cfg 
mysql> system rm -rf  /var/lib/mysql/db5/b.exp

mysql> system ls /var/lib/mysql/db5/b.*
/var/lib/mysql/db5/b.frm  /var/lib/mysql/db5/b.ibd
mysql> 
mysql> desc db5.b;
mysql> select  * from  db5.b;

	3.2 增量备份与恢复
	
	增量备份:备份上次备份后，所有新产生的数据。
		
	首备份数据（完全备份）
[root@host50 ~]# innobackupex --user root --password 123qqq...A  /datafull --no-timestamp

[root@host50 ~]# ls /datafull
[root@host50 ~]# cat /datafull/xtrabackup_checkpoints
	第2次备份  （增量备份）
		select  count(*) from db5.a;
		insert into db5.a values(999);//插入多条
		select  count(*) from db5.a;
[root@host50 ~]# innobackupex --user root --password 123qqq...A \
   --incremental /new2dir  --incremental-basedir=/datafull --no-timestamp

[root@host50 ~]# ls /new2dir
[root@host50 ~]# cat /new2dir/xtrabackup_checkpoints
	第3次备份  （增量备份）  
			mysql> select count(*) from db5.a;
			insert into db5.a values(7777);//插入多条	
			mysql> select count(*) from db5.a;

[root@host50 ~]# innobackupex --user root --password 123qqq...A \
--incremental /new3dir  --incremental-basedir=/new2dir --no-timestamp

[root@host50 ~]# ls /new3dir	
[root@host50 ~]# cat /new3dir/xtrabackup_checkpoints
		5分钟 到16:57

[root@host50 ~]# scp -r /datafull  root@192.168.4.51:/root/
[root@host50 ~]# scp -r /new2dir/  root@192.168.4.51:/root
[root@host50 ~]# scp -r /new3dir/  root@192.168.4.51:/root/

	在192.168.4.51 恢复数据
		步骤如下：
	清空数据库目录
[root@host51 ~]# systemctl  stop  mysqld
[root@host51 ~]# rm  -rf /var/lib/mysql/*
[root@host51 ~]# ls /var/lib/mysql/

	准备恢复数据
[root@host51 ~]# innobackupex  --apply-log  --redo-only  /root/datafull

	合并数据
[root@host51 ~]# innobackupex  --apply-log  --redo-only  /root/datafull \
--incremental-dir=/root/new2dir

[root@host51 ~]# innobackupex  --apply-log  --redo-only  /root/datafull \
--incremental-dir=/root/new3dir

	拷贝数据

[root@host51 ~]# innobackupex  --copy-back /root/datafull/
[root@host51 ~]# chown  -R  mysql:mysql  /var/lib/mysql
       启动服务
[root@host51 ~]# systemctl  start mysqld
[root@host51 ~]# 
[root@host51 ~]# mysql -uroot -p123qqq...A
mysql> show  databases;


[root@host51 ~]# rm  -rf  /root/new2dir/
[root@host51 ~]# rm  -rf  /root/new3dir/
