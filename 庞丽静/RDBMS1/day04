*****************************************************DBA1*DAY04***************************************
select user();  //显示当前登录用户    show grants;  显示当前登录用户权限

一: 用户授权
	1.1  授权 : 添加用户并设置权限
	1.2  格式	
		添加权限:
			grant 权限列表 on 库名 to 用户名@"客户端地址" identified by "密码"  with grant option;
			all 所有权限  usage 无权限  select,update,insert 个别权限  select,update(字段1,字段2)	指定字段
			*.*  //所有库所有表      库名.* // 一个库	 库名.表名 //一张表
			
		mysql> grant all on *.* to mydba@"%" identified by "123456" with grant option;	//添加用户mydba对所有库所
			有表有所有权限,并添加可授权权限

		修改密码:
			mysql> set password =password("123456");	//修改自己密码
			mysql> set password for userone@"localhost" =password("111111");	//管理员修改其他人密码
		
	1.3 授权信息  mysql(授权信息)
		user表 		已授权用户及权限表
		db表  			用户对数据库的权限
		table_priv表 	已授权用户对表的访问权限
		columns_priv表	已授权用户对字段的访问权限
			mysql> update  mysql.db set Delete_priv="N" where db="db3" and user="admin2" and host="localhost"\G
					//可通过修改文件修改权限
			mysql> flush privileges;	//刷新

	1.4 删除用户
		mysql> drop user yaya99@"%"; 	//删除用户(用户名@"客户端地址")

	1.5  撤销权限
		mysql> show grants for mydba@"%";
		+---------------------------------------------------------------------------------------------------------------+
		| Grants for mydba@%                                           |
		+---------------------------------------------------------------------------------------------------------------+
		| GRANT ALL PRIVILEGES ON *.* TO 'mydba'@'%' WITH GRANT OPTION |
		+---------------------------------------------------------------------------------------------------------------+
		mysql> revoke grant option on *.* from mydba@"%";		//撤销用户mydba 的授权权限
		mysql> show grants for mydba@"%";
		+------------------------------------------------------------------------------+
		| Grants for mydba@%                         |
		+-------------------------------------------------------------------------------+
		| GRANT ALL PRIVILEGES ON *.* TO 'mydba'@'%' |
		+------------------------------------------------------------------------------+

		mysql> revoke all on *.* from mydba@"%";	//删除所有权限
		Query OK, 0 rows affected (0.00 sec)

		mysql> show grants for mydba@"%";
		+--------------------------------------------------------------+
		| Grants for mydba@%                |
		+--------------------------------------------------------------+
		| GRANT USAGE ON *.* TO 'mydba'@'%' |
		+---------------------------------------------------------------+
		
	1.6  恢复root密码
		vim /etc/my.cnf
			[mysqld]		
			skip-grant-tables	//添加
	
		systemctl restart mysqld		//重启MySQL
			mysql> select user,host,authentication_string from mysql.user;	//查看
			mysql> update mysql.user set authentication_string=password("aaa123...A")
  				  -> where user="root" and host="localhost";	//修改密码
			mysql> flush privileges;		//刷新,然后重启,用新密码登录

	1.7  修改数据库管理员root用户本机登录密码
		[root#]  mysqladmin -uroot -p password "123456"	//输入后需要输入原密码
		
################################################################################################



二: 完全备份
	物理备份
		]#  mkdir /dbbak
		]#  cp -r /var/lib/mysql /dbbak/mysql.bak
		]#  scp -r /dbbak/mysql.bak root@192.168.4.51:/root/
	物理恢复
		]#  systemctl stop mysqld
		]#  rm -rf /var/lib/mysql
		]#  cp -r /root/mysql.bak /var/lib/mysql
		]#  chown -R mysql:mysql /var/lib/mysql
		]#  systemctl start mysqld
		]#  mysql -uroot -p123456

三: 增量备份
	binlog日志的使用
		1.binlog日志介绍
		2.启用日志	
			[root@mysql50 mysql]# vim/etc/my.cnf
				log-bin		//添加字段
				server_id=50
			:wq
			[root@mysql50 mysql]# systemctl restart mysqld	
			[root@mysql50 mysql]# ls /var/lib/mysql/*-bin.*	//查看日志位置
			[root@mysql50 mysql]# mysql -uroot -p123456 -e "flush logs;"	//重启一次生成一个日志(-e在命令行执行数据库命令)



		3.手动创建日志文件(三种方法)
			1: systemctl restart mysqld

			2: mysql -uroot -p123456 -e "show databases;"
			mysql -uroot -p123456 -e "flush logs;"

			3: mysql -uroot -p123456
			mysql> flush logs;

		  删除已有文件(两种方法)
			mysql> purge master logs to "mysql50-bin.000004";
			mysql> reset master 
			

		4.修改日志格式
			[root@mysql50 mysql]# vim/etc/my.cnf
				[mysqld]
				binlog_format="mixed"		//添加
				:wq

			[root@mysql50 mysql]# systemctl restart mysqld
			[root@mysql50 mysql]# mysql -uroot -p123456

			mysql> show variables like "binlog_format";
			mysql> show master status;
		5.查看日志内容
			mysql> show master status;
			[root@mysql50 ~]# mysqlbinlog /mylog/db50.000001 | grep -i create 
	
		6.修改日志保存位置
			[root@mysql50 ~]# mkdir /mylog
			[root@mysql50 ~]# chown mysql /mylog
			[root@mysql50 ~]# vim /etc/my.cnf
				[mysqld]
				log-bin=/mylog/db50	//db50是日志名字
				:wq
			[root@mysql50 ~]# systemctl restart mysqld
	
		7.  恢复数据
			[root@mysql50 ~]# scp /mylog/db50.000001 root@192.168.4.51:/root/  	//拷贝给目标主机
			[root@mysql51 ~]# mysqlbinlog /root/db50.000001 | mysql -uroot -p123456	//恢复数据,打开日志文件管道给登录系
														统命令就可恢复数据,等于重新执行一遍
			[root@mysql51 ~]# mysqlbinlog --start-position=2232 --stop-position=3656 /root/db50.000001 | mysql -
						uroot -p123456		//恢复指定偏移量 (2232到3656) 的数据
			命令格式
				mysqlbinlog 日志文件名 | mysql -uroot -p密码
				mysqlbinlog 选项  日志文件名 | mysql -uroot -p密码
				选项 								用途
				--start-position数字    				    起始偏移量
				--stop-position数字      				    结束偏移量
				--start-datetime="yyyy-mm-dd hh:mm:ss"	   起始时间
				--stop-datetime="yyyy-mm-dd hh:mm:ss"	   结束时间













