######################RDBMS2 (day01)###############

++++++RDBMS2_DAY01  
一、MySQL 主从同步
	1.1. 相关概念 ？
	1.2  部署mysql主从同步，配置步骤如下：
		1.2.1 配置主服务器192.168.4.51 （ 时间10分钟到 09：32） 
			]# vim /etc/my.cnf
			   [mysqld]
				server_id=51
				log-bin=master51
			:wq
			]# systemctl restart mysqld
			]# ls /var/lib/mysql/master51*

			]# mysql -uroot -p123qqq...A	
mysql> grant replication slave on  *.* to  repluser@"%" 
       identified  by "123qqq...A";
mysql> show master status;

[root@host51 ~]# mysqldump -uroot  -p123qqq...A  --master-data  db5  > /root/db5.sql
[root@host51 ~]# scp  /root/db5.sql root@192.168.4.52:/tmp/
		1.2.2 配置从服务器192.168.4.52
			1 指定server_id 
				]# vim /etc/my.cnf
   				   [mysqld]
				   server_id=52
				:wq
				]# systemctl  restart mysqld
			2 确保与主服务器数据一致。
]# mysql -uroot -p123qqq...A  -e  "create database db5"
]# mysql -uroot -p123qqq...A  db5 < /tmp/db5.sql 
]# mysql -uroot -p123qqq...A  -e  "select  * from db5.a"
]# mysql -uroot -p123qqq...A  -e  "select  * from db5.b"

		 	3 指定主服务器信息 (时间 15 分钟到 10：45)

[root@host52 ~]# grep  master51 /tmp/db5.sql 
CHANGE MASTER TO MASTER_LOG_FILE='master51.000001', MASTER_LOG_POS=688;
[root@host52 ~]# 

[root@host52 ~]# mysql -uroot -p123qqq...A 
mysql> show  slave status;

mysql> change master to  master_host="192.168.4.51" ,  master_user="repluser" , 
       master_password="123qqq...A" , master_log_file="master51.000001" , 
       master_log_pos=688;

mysql> start  slave  ;

mysql> show  slave status\G;
		Master_Host: 192.168.4.51
		Slave_IO_Running: Yes
            	Slave_SQL_Running: Yes	
	
	相关文件 
		master.info  relay-log.info   
                主机名-relay-bin.000001
		主机名-relay-bin.index

	把从服务器恢复为独立的数据库服器
	52]# cd /var/lib/mysql/
	52]# rm  -rf  master.info  relay-log.info
	52]# rm -rf  *-relay-bin*
        52]# systemctl restart mysqld

	重新配置为51的从服务器
	51]# mysql> show master status;

	52 mysql> change master to  .....  ;
	52 mysql> start slave;
	52 mysql> show slave status\G;

	时间10分钟 到 11：53 	

	1.3 测试主从同步配置
		1.3.1 在主服务器51 添加连接用户
		mysql> grant  all on  db5.*  to yaya99@"%" identified by "123qqq...A";

		1.3.2 在客户端50主机，连接主服务器访问数据
[root@host50 ~]# mysql -h192.168.4.51 -uyaya99  -p123qqq...A
mysql> create table db5.c ( id int);
mysql> insert into  db5.c values(999);
mysql> insert into  db5.c values(999);
mysql> update db5.a set id=1001;

52]# mysql -uroot -p123qqq...A -e "select  * from  db5.c;"
52]# mysql -uroot -p123qqq...A -e "select  * from  db5.a;"

二、主从同步模式
	2.1 主从同步结构类型
		一主一从
		一主多从
		主从从
		主主结构

	2.2 配置一主多从结构 
		要求：把数据库服务器53 也配置为51的从服务器。

		53]# vim /etc/my.cnf
		     [mysqld]
			server_id=53
		  :wq
		53]# systemctl restart mysqld

	51]#mysqldump -uroot -p123qqq...A --master-data  db5  > /root/db5.sql
	51]# scp  /root/db5.sql   root@192.168.4.53:/tmp/


		53]# mysql -uroot -p123qqq...A -e  "create database db5"
  		53]# mysql -uroot -p123qqq...A db5 < /tmp/db5.sql

[root@host53 ~]# grep master51  /tmp/db5.sql 
CHANGE MASTER TO MASTER_LOG_FILE='master51.000001', MASTER_LOG_POS=2257;


[root@host53 ~]# mysql  -h192.168.4.51 -urepluser -p123qqq...A
mysql> exit

[root@host53 ~]# mysql -uroot -p123qqq...A
mysql> show slave status;
Empty set (0.00 sec)

mysql> change  master to master_host="192.168.4.51" , master_user="repluser" , master_password="123qqq...A" , master_log_file="master51.000001" , master_log_pos=2257 ;

mysql> start slave ;
	    Master_Host: 192.168.4.51
	    Slave_IO_Running: Yes
            Slave_SQL_Running: Yes

	测试配置
		客户端50 连接主服务器51 访问数据
[root@host50 ~]# mysql -h192.168.4.51 -uyaya99  -p123qqq...A
insert into  db5.c values(3232);
insert into  db5.c values(3232);
insert into  db5.c values(3232);
select * from  db5.c where id=3232;

		在从服务器53本机查看数据（能够看到同样的操作）

[root@host53 ~]# mysql -uroot -p123qqq...A -e "select * from  db5.c where id=3232;"
		时间到 15：03 
		休息到 15：20 














 
	2.3 配置主从从结构
192.168.4.53
  	]# systemctl  stop mysqld
  	]# cd /var/lib/mysql
  	]# rm -rf master.info 
  	]# rm -rf relay-log.info 
  	]#  rm -rf  *-relay-bin*
  	]# vim /etc/my.cnf
		#server_id
           :wq

  	]# systemctl  start mysqld
            mysql -uroot -p123qqq...A
            mysql> drop database db5;
	    mysql> exit ;

	   配置主服务器53             时间7分钟 到 15：42 
		]# vim /etc/my.cnf
		    [mysqld]
			server_id=53
			log-bin=db53
		:wq
		]# systemctl restart  mysqld
		]# ls /var/lib/mysql/db53*

		]# mysql -uroot -p123qqq...A
		mysql> grant replication slave  on  *.*  to repluser@"%" identified by "123qqq...A";

		mysql> show master status;
+-------------+----------+--------------+------------------+-------------------+
| File        | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |
+-------------+----------+--------------+------------------+-------------------+
| db53.000001 |      441 |              |                  |                   |
+-------------+----------+--------------+------------------+-------------------+
1 row in set (0.00 sec)

mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
| sys                |
+--------------------+
4 rows in set (0.00 sec)
	配置从服务器54
		]# vim /etc/my.cnf
			[mysqld]
			server_id=54
			log-bin=db54
			log_slave_updates
		:wq
		]# systemctl  restart mysqld

		[root@host54 ~]# ls /var/lib/mysql/db54*
		/var/lib/mysql/db54.000001  /var/lib/mysql/db54.index

		[root@host54 ~]# mysql -uroot -p123qqq...A
		mysql> 
mysql> grant replication slave  on  *.*  to  repluser@"%" identified by "123qqq...A";

mysql> show master status;
+-------------+----------+--------------+------------------+-------------------+
| File        | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |
+-------------+----------+--------------+------------------+-------------------+
| db54.000001 |      441 |              |                  |                   |
+-------------+----------+--------------+------------------+-------------------+
			时间 5 分钟 到 16：08 

		mysql>  change master to  master_host="192.168.4.53" , 
                     master_user="repluser" , master_password="123qqq...A" , 
		master_log_file="db53.000001" , master_log_pos=441 ;

		mysql> start slave;
		mysql> show slave status\G;
			 Master_Host: 192.168.4.53
 			Slave_IO_Running: Yes
                	Slave_SQL_Running: Yes

	配置从服务器55
		]# vim /etc/my.cnf
			[mysqld]
			server_id=55
		:wq
		]# systemctl restart mysqld

		]# mysql -uroot -p123qqq...A
mysql> change master to  master_host="192.168.4.54" ,master_user="repluser" ,
     master_password="123qqq...A" , master_log_file="db54.000001" , 
    master_log_pos=441;

mysql> start slave;
Query OK, 0 rows affected (0.00 sec)

mysql> 
mysql> exit
Bye
[root@host55 ~]# mysql -uroot -p123qqq...A -e  "show slave status\G" | grep 192.168.4.54
mysql: [Warning] Using a password on the command line interface can be insecure.
                  Master_Host: 192.168.4.54
[root@host55 ~]# 
[root@host55 ~]# mysql -uroot -p123qqq...A -e  "show slave status\G" | grep -i yes
mysql: [Warning] Using a password on the command line interface can be insecure.
             Slave_IO_Running: Yes
            Slave_SQL_Running: Yes
[root@host55 ~]# 
		
		测试配置
			在主服务器53 本机创建新库 、 表  、记录
[root@host53 mysql]# mysql -uroot -p123qqq...A -e "create database db6"
mysql: [Warning] Using a password on the command line interface can be insecure.
[root@host53 mysql]# 
[root@host53 mysql]# mysql -uroot -p123qqq...A -e "create table db6.a(id int)"
mysql: [Warning] Using a password on the command line interface can be insecure.
[root@host53 mysql]# 
[root@host53 mysql]# 
[root@host53 mysql]# mysql -uroot -p123qqq...A -e "insert into db6.a values (99)"
mysql: [Warning] Using a password on the command line interface can be insecure.
[root@host53 mysql]# 
[root@host53 mysql]# 
[root@host53 mysql]# mysql -uroot -p123qqq...A -e "select  * from db6.a"
mysql: [Warning] Using a password on the command line interface can be insecure.
+------+
| id   |
+------+
|   99 |
+------+
[root@host53 mysql]# 

			在从服务器54 和 55 主机可以查看到同样的数据。
[root@host54 mysql]# mysql -uroot -p123qqq...A -e "select  * from db6.a"
mysql: [Warning] Using a password on the command line interface can be insecure.
+------+
| id   |
+------+
|   99 |
+------+

[root@host54 mysql]# mysql -uroot -p123qqq...A -e "select  * from db6.a"
mysql: [Warning] Using a password on the command line interface can be insecure.
+------+
| id   |
+------+
|   99 |
+------+
[root@host54 mysql]# mysql -uroot -p123qqq...A -e "select  * from db6.a"
mysql: [Warning] Using a password on the command line interface can be insecure.
+------+
| id   |
+------+
|   99 |
+------+

	2.4 主从同步复制模式
		2.4.1 主从同步复制模式介绍
			1 异步复制模式 （默认）
			2 全同步复制模式
			3 半同步复制模式

		2.4.2 配置半同步复制模式
			命令行配置立即生效

1 查看是否允许动态加载模块(默认允许)
mysql> show  variables  like  'have_dynamic_loading';
+----------------------+-------+
| Variable_name        | Value |
+----------------------+-------+
| have_dynamic_loading | YES   |
+----------------------+-------+
2 安装模块
mysql>  install  plugin  rpl_semi_sync_master   SONAME   "semisync_master.so";
mysql>  install  plugin  rpl_semi_sync_slave    SONAME   "semisync_slave.so";
3 查看模块安装状态  
 mysql> select  PLUGIN_NAME , PLUGIN_STATUS from  information_schema.plugins 
        where PLUGIN_NAME  like '%semi%'; 
+----------------------+---------------+
| PLUGIN_NAME          | PLUGIN_STATUS |
+----------------------+---------------+
| rpl_semi_sync_master | ACTIVE        |
| rpl_semi_sync_slave  | ACTIVE        |
+----------------------+---------------+
4 启用模块
mysql> set  global rpl_semi_sync_master_enabled=1;
mysql> set  global rpl_semi_sync_slave_enabled=1;  
5 查看模块启用状态
mysql> show  variables  like  "rpl_semi_sync_%_enabled";
+------------------------------+-------+
| Variable_name                | Value |
+------------------------------+-------+
| rpl_semi_sync_master_enabled | ON    |
| rpl_semi_sync_slave_enabled  | ON    |
+------------------------------+-------+

			永久配置vim /etc/my.cnf
		]# vim /etc/my.cnf
			[mysqld]
plugin-load="rpl_semi_sync_master=semisync_master.so;rpl_semi_sync_slave=semisync_slave.so"

rpl_semi_sync_master_enabled=1
rpl_semi_sync_slave_enabled=1
:wq
	       ]# systemctl restart mysqld
	     
[root@host54 ~]# mysql -uroot  -p123qqq...A
mysql> 
mysql>  select  PLUGIN_NAME , PLUGIN_STATUS from  information_schema.plugins
    ->  where PLUGIN_NAME  like '%semi%';
+----------------------+---------------+
| PLUGIN_NAME          | PLUGIN_STATUS |
+----------------------+---------------+
| rpl_semi_sync_master | ACTIVE        |
| rpl_semi_sync_slave  | ACTIVE        |
+----------------------+---------------+
2 rows in set (0.00 sec)

mysql> show  variables  like  "rpl_semi_sync_%_enabled";
+------------------------------+-------+
| Variable_name                | Value |
+------------------------------+-------+
| rpl_semi_sync_master_enabled | ON    |
| rpl_semi_sync_slave_enabled  | ON    |
+------------------------------+-------+
2 rows in set (0.00 sec)

mysql>

#####################RDBMS2_DAY02###############
一、数据读写分离
	1.1  相关概念
	1.2  配置读写分离服务
		1.2.1 配置 mysql 主从同步结构
		1.2.2 配置读写分离开服务57
			1 安装软件maxscale
			   
			2 编辑主配置文件
			]# cp /etc/maxscale.cnf  /tmp/

ot@host57 ~]# cat /etc/maxscale.cnf


[maxscale]
threads=auto


[server1]
type=server
address=192.168.4.51
port=3306
protocol=MySQLBackend

[server2]
type=server
address=192.168.4.52
port=3306
protocol=MySQLBackend

[MySQL Monitor]
type=monitor
module=mysqlmon
servers=server1, server2
user=maxscalemon
passwd=123qqq...A
monitor_interval=10000





[Read-Write Service]
type=service
router=readwritesplit
servers=server1, server2
user=maxscaleroute
passwd=123qqq...A
max_slave_connections=100%


[MaxAdmin Service]
type=service
router=cli



[Read-Write Listener]
type=listener
service=Read-Write Service
protocol=MySQLClient
port=4006

[MaxAdmin Listener]
type=listener
service=MaxAdmin Service
protocol=maxscaled
socket=default
port=4016
[root@host57 ~]# 

		1.3 配置数据库服务器 （ 时间5分钟 到 10：31 ）
			1.3.1 添加监控用户maxscalemon   123qqq...A
			1.3.2 添加路由用户maxscaleroute 123qqq...A

		 主服务器添加
mysql> grant   replication slave, replication client on  *.*  to 
    -> maxscalemon@"%" identified  by  "123qqq...A";

mysql> grant  select  on  mysql.* to  maxscaleroute@"%"
    -> identified  by  "123qqq...A";

	  	 从服务器查看
mysql> select  user from mysql.user where user like 'maxscale%';
	
	    1.4 启动maxscale服务
[root@host57 ~]# maxscale  -f /etc/maxscale.cnf
[root@host57 ~]# killall  -9  maxscale  停止服务的命令


	   1.5 查看服务信息
[root@host57 ~]# ps -C  maxscale
  PID TTY          TIME CMD
 1111 ?        00:00:00 maxscale
[root@host57 ~]# 
[root@host57 ~]# netstat -utnlp  | grep maxscale
tcp6       0      0 :::4006                 :::*                    LISTEN      1111/maxscale       
tcp6       0      0 :::4016                 :::*                    LISTEN      1111/maxscale       
[root@host57 ~]# 

	1.6 日志文件 (记录服务启动和报错信息)
[root@host57 ~]# ls /var/log/maxscale/
maxscale.log
[root@host57 ~]# 	
		
		排错时间10分钟 到 11：00
	1.7  访问管理服务查看监控信息
[root@host57 ~]# maxadmin  -uadmin  -pmariadb -P4016

MaxScale> list servers
Servers.
-------------------+-----------------+-------+-------------+--------------------
Server             | Address         | Port  | Connections | Status              
-------------------+-----------------+-------+-------------+--------------------
server1            | 192.168.4.51    |  3306 |           0 | Master, Running
server2            | 192.168.4.52    |  3306 |           0 | Slave, Running
-------------------+-----------------+-------+-------------+--------------------
MaxScale> 

MaxScale> exit 

		1.8 测试配置
			1.8.1 在主服务器添加访问数据的连接用户
[root@host51 ~]# mysql -uroot -p123qqq...A
mysql> create database db7;
mysql> grant all  on  db7.*  to yaya66@"%" identified by "123qqq...A";
mysql> 

[root@host52 ~]# mysql -uroot -p123qqq...A -e "select user from mysql.user"
[root@host52 ~]# mysql -uroot -p123qqq...A -e "show databases"

			1.8.2 客户端50连接读写分离服务器57 ，访问数据
[root@host50 ~]# ping  -c  2  192.168.4.57
[root@host50 ~]# which  mysql
[root@host50 ~]# mysql -h192.168.4.57 -P4006  -uyaya66  -p123qqq...A
mysql> show  grants;
mysql> use db7;
mysql> show tables;
mysql> create table db7.a(id int);
mysql> insert into db7.a values(101);
mysql> select  * from db7.a;
		      1.8.3 验证57服务器的功能
				1  在从服务器本机向db7.a 表插入记录
[root@host52 ~]# mysql -uroot -p123qqq...A  -e  "insert into db7.a values(52)"
[root@host52 ~]# mysql -uroot -p123qqq...A  -e  "select  * from db7.a"
+------+
| id   |
+------+
|  101 |
|   52 |
+------+
				2  在主服务器本机查看db7.a表记录
[root@host51 ~]# mysql -uroot -p123qqq...A  -e  "select  * from db7.a"
+------+
| id   |
+------+
|  101 |
+------+
				3 客户端50 连接57 查看数据
[root@host50 ~]# mysql -h192.168.4.57 -P4006  -uyaya66  -p123qqq...A
mysql> select  * from db7.a;
+------+
| id   |
+------+
|  101 |
|   52 |
+------+
2 rows in set (0.00 sec)

mysql> 

二、mysql多实例
	2.1  相关概念 ？
	2.2 配置mysql多实例
]# scp /linux-soft/03/mysql/mysql-5.7.20-linux-glibc2.12-x86_64.tar.gz   root@192.168.4.57:/root/
	
		安装软件 (3分钟到 14：15)
[root@host57 ~]# tar -zxvf  mysql-5.7.20-linux-glibc2.12-x86_64.tar.gz

[root@host57 ~]# mv mysql-5.7.20-linux-glibc2.12-x86_64  /usr/local/mysql
[root@host57 ~]# 
[root@host57 ~]# cd /usr/local/mysql/

[root@host57 mysql]# ls
bin  COPYING  docs  include  lib  man  README  share  support-files
[root@host57 mysql]# 

		修改配置文件
		]# mv /etc/my.cnf /root/
		]# vim  /etc/my.cnf
			[mysqld_multi]
			mysqld = /usr/local/mysql/bin/mysqld_safe 
			mysqladmin = /usr/local/mysql/bin/mysqladmin 
			user = root 	
		
			[mysqld1]
			datadir=/dir1
			port=3307
			log-error=/dir1/mysql1.log
			pid-file=/dir1/mysql1.pid
			socket=/dir1/mysql1.sock
		
			[mysqld2]
			datadir=/dir2
			port=3308
			log-error=/dir2/mysql2.log
			pid-file=/dir2/mysql2.pid
			socket=/dir2/mysql2.sock
	:wq

	创建数据库目录
	]# mkdir /dir1
	]# mkdir /dir2

	启动服务
	
	[root@host57 ~]# vim /etc/profile
		export  PATH=/usr/local/mysql/bin:$PATH
	:wq

	[root@host57 ~]#  source  /etc/profile

	[root@host57 ~]#  echo $PATH
/usr/local/mysql/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin

	 [root@host57 ~]# useradd   mysql

	 [root@mysql57 ~]# mysqld_multi  start  1
Installing new database in /dir1

2019-07-13T07:24:49.137075Z 0 [Warning] TIMESTAMP with implicit DEFAULT value is deprecated. Please use --explicit_defaults_for_timestamp server option (see documentation for more details).
2019-07-13T07:24:50.710158Z 0 [Warning] InnoDB: New log files created, LSN=45790
2019-07-13T07:24:51.107656Z 0 [Warning] InnoDB: Creating foreign key constraint system tables.
2019-07-13T07:24:51.227532Z 0 [Warning] No existing UUID has been found, so we assume that this is the first time that this server has been started. Generating a new UUID: 4d70db2c-a53f-11e9-94d7-525400044256.
2019-07-13T07:24:51.251404Z 0 [Warning] Gtid table is not ready to be used. Table 'mysql.gtid_executed' cannot be opened.
2019-07-13T07:24:51.251959Z 1 [Note] A temporary password is generated for root@localhost: NyiDw,U=x8=7
[root@mysql57 ~]# 

[root@mysql57 ~]# ls /dir1
auto.cnf        ib_logfile0  mysql       mysql1.sock         sys
ib_buffer_pool  ib_logfile1  mysql1.log  mysql1.sock.lock
ibdata1         ibtmp1       mysql1.pid  performance_schema
[root@mysql57 ~]#

[root@mysql57 ~]# netstat  -utnlp  | grep  :3307
tcp6       0      0 :::3307                 :::*                    LISTEN      1602/mysqld         
[root@mysql57 ~]# 

	使用初始密码登陆实例1 服务
[root@mysql57 ~]# mysql -uroot -p'NyiDw,U=x8=7' -S /dir1/mysql1.sock

mysql> alter  user  root@"localhost" identified by "123456";
mysql> exit

[root@mysql57 ~]# mysql -uroot -p123456 -S /dir1/mysql1.sock

mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
| sys                |
+--------------------+
mysql> exit

		[root@mysql57 ~]# mysqld_multi  start  2
		[root@mysql57 ~]# ls /dir2
		[root@mysql57 ~]# mysql -uroot -p‘密码’ -S /dir2/mysql2.sock
		mysql> alter user  root@"localhost" identified by "123456";
		mysql> exit ;

		[root@mysql57 ~]# mysql -uroot -p123456 -S /dir2/mysql2.sock
		mysql> show databases;
		mysql> exit ;
		
		
[root@mysql57 ~]# netstat -utnlp  | grep -i mysqld
tcp6       0      0 :::3307                 :::*                    LISTEN      1602/mysqld         
tcp6       0      0 :::3308                 :::*                    LISTEN      1826/mysqld         
[root@mysql57 ~]#

[root@mysql57 ~]# mysql -uroot -p123456 -S /dir2/mysql2.sock
mysql> create database gamedb;
mysql> create table gamedb.a(id int);
mysql> insert into gamedb.a values(8888);
mysql> select  * from gamedb.a;
+------+
| id   |
+------+
| 8888 |
+------+
mysql> exit
[root@mysql57 ~]# ls /dir2
[root@mysql57 ~]# ls /dir2/gamedb/

	停止服务
	
[root@mysql57 ~]# netstat -utnlp  | grep  mysqld
tcp6       0      0 :::3307                 :::*                    LISTEN      1602/mysqld         
tcp6       0      0 :::3308                 :::*                    LISTEN      1826/mysqld         
[root@mysql57 ~]# 
[root@mysql57 ~]# mysqld_multi  --user=root --password=123456  stop 2
[root@mysql57 ~]# 
[root@mysql57 ~]# netstat -utnlp  | grep  mysqld
tcp6       0      0 :::3307                 :::*                    LISTEN      1602/mysqld         
[root@mysql57 ~]# ls /dir2
auto.cnf  ib_buffer_pool  ib_logfile0  mysql       performance_schema
gamedb    ibdata1         ib_logfile1  mysql2.log  sys
[root@mysql57 ~]#

	休息到 16：15 


[root@mysql57 ~]# mysqld_multi start 2
[root@mysql57 ~]# 
[root@mysql57 ~]# netstat -utnlp  | grep  mysqld
tcp6       0      0 :::3308                 :::*   LISTEN      2120/mysqld         
[root@mysql57 ~]# 
[root@mysql57 ~]# mysql -uroot -p123456 -S /dir2/mysql2.sock

mysql> grant all on db6.* to  yaya66@"%"  identified by "123456";
mysql> exit

[root@mysql50 ~]# mysql -h192.168.4.57 -P3308 -uyaya66 -p123456
mysql> create database db6;
mysql> create table db6.a(id int);
mysql> insert into db6.a values(777);
mysql> select  * from db6.a;
mysql> 

	启用多实例服务2 的binlog日志
		]# vim /etc/my.cnf
			[mysqld2]
			server_id=2
			log-bin=mysqld2
		:wq
	
[root@mysql57 ~]# mysqld_multi  --user=root --password=123456 stop 2
[root@mysql57 ~]# netstat -utnlp  | grep  :3308
		
[root@mysql57 ~]# mysqld_multi  start 2
[root@mysql57 ~]# 
[root@mysql57 ~]# netstat -utnlp  | grep  :3308
tcp6       0      0 :::3308       :::*         LISTEN      2547/mysqld         
[root@mysql57 ~]# ls /dir2/mysqld2*
/dir2/mysqld2.000001  /dir2/mysqld2.index
[root@mysql57 ~]# 
[root@mysql57 ~]# mysql -uroot -p123456 -S /dir2/mysql2.sock
mysql> show master status;
+----------------+----------+--------------+------------------+-------------------+
| File           | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |
+----------------+----------+--------------+------------------+-------------------+
| mysqld2.000001 |      154 |              |                  |                   |
+----------------+----------+--------------+------------------+-------------------+

		在主机57上添加多实例服务编号3 ，具体配置如下： 20分钟到 17：20 
			1 修改配置文件

			2 启动实例3服务
			
			3 使用初始密码登陆，并修改登陆密码

			4 配置允许客户端50 使用yaya666 用户 密码 654321 连接实例3 服务，对bbsdb库有完全权限

			5 客户端50 连接实例3 服务，访问数据 

			6 停止实例3 服务

##############RDBMS2_day03_数据分片
1 相关概念？
		休息到 10：00

2 配置mycat服务器

	2.1 部署服务运行环境JDK
[root@mycat56 ~]# yum  -y  install java-1.8.0-openjdk
[root@mycat56 ~]# which  java
/usr/bin/java
[root@mycat56 ~]# 

[root@mycat56 ~]# java -version
openjdk version "1.8.0_161"
OpenJDK Runtime Environment (build 1.8.0_161-b14)
OpenJDK 64-Bit Server VM (build 25.161-b14, mixed mode)
[root@mycat56 ~]# 

	2.2 安装mycat软件
[root@mycat56 ~]# tar -zxvf Mycat-server-1.6-RELEASE-20161028204710-linux.tar.gz 
[root@mycat56 ~]# mv mycat /usr/local/
[root@mycat56 ~]# 
[root@mycat56 ~]# ls /usr/local/mycat/
bin  catlet  conf  lib  logs  version.txt
[root@mycat56 ~]#
 
       2.3 配置文件解析


       2.4 配置mycat服务
		2.4.1 创建连接用户
			
[root@mycat56 mycat]# vim /usr/local/mycat/conf/server.xml (使用默认配置)


	        2.4.2 配置数据分片
[root@mycat56 mycat]# cp /usr/local/mycat/conf/schema.xml  /root/
[root@mycat56 conf]# wc -l schema.xml 
77 schema.xml
[root@mycat56 conf]# 

[root@mycat56 conf]# sed -i  '56,77d' schema.xml
[root@mycat56 conf]# sed -i  '16,18d' schema.xml 
[root@mycat56 conf]# sed -i  '36,39d' schema.xml 

	[root@mycat56 conf]# vim schema.xml
		配置文件分为3部分
		<schema> …… </schema> 定义数据分片存储的表

		<dataNode 选项=值,…… /> 定义数据库服务器的主机名

		<datahost 选项=值,…>……</datahost> 定义主机名的ip地址

	2.4.3 配置数据库服务器
		1 创建存储数据的库
[root@host53 ~]# mysql -uroot -p123qqq...A -e  "create database db1";
[root@host54 ~]# mysql -uroot -p123qqq...A -e  "create database db2";
[root@host55 ~]# mysql -uroot -p123qqq...A -e  "create database db3";

		2 授权mycat服务连接用户admin

[root@host53 ~]#mysql -uroot -p123qqq...A -e  'grant all on  *.* to admin@"%" identified by "123qqq...A"';

[root@host54 ~]# mysql -uroot -p123qqq...A -e  'grant all on  *.* to admin@"%" identified by "123qqq...A"';

[root@host55 ~]# mysql -uroot -p123qqq...A -e  'grant all on  *.* to admin@"%" identified by "123qqq...A"';
		
		2.4.4 启动mycat服务
			1 测试数据库服务器的授权用户admin
			
   60  which  mysql
   61  yum -y  install mariadb
   62  mysql -h192.168.4.53 -uadmin -p123qqq...A
   63  mysql -h192.168.4.54 -uadmin -p123qqq...A
   64  mysql -h192.168.4.55 -uadmin -p123qqq...A

			2 启动mycat服务

[root@mycat56 ~]# netstat  -utnlp   | grep  :8066
[root@mycat56 ~]# 

init_zk_data.sh  rehash.sh  wrapper-linux-ppc-64  wrapper-linux-x86-64
[root@mycat56 ~]# 

[root@mycat56 ~]# /usr/local/mycat/bin/mycat  --help
Usage: /usr/local/mycat/bin/mycat { console | start | stop | restart | status | dump }
[root@mycat56 ~]# 

[root@mycat56 ~]# 
[root@mycat56 ~]# /usr/local/mycat/bin/mycat  start
Starting Mycat-server...
[root@mycat56 ~]# 
[root@mycat56 ~]# netstat  -utnlp   | grep  :8066
tcp6       0      0 :::8066                 :::*                    LISTEN      23588/java          
[root@mycat56 ~]# ls /usr/local/mycat/logs/
mycat.log  mycat.pid  wrapper.log
[root@mycat56 ~]# 

	2.4.5 在客户端测试mycat 服务

[root@client50 ~]# mysql -h192.168.4.56  -P8066  -uroot -p123456
mysql> show databases;
+----------+
| DATABASE |
+----------+
| TESTDB   |
+----------+
1 row in set (0.01 sec)
mysql> 
mysql> use TESTDB;
mysql> show tables;
+------------------+
| Tables in TESTDB |
+------------------+
| company          |
| customer         |
| customer_addr    |
| employee         |
| goods            |
| hotnews          |
| orders           |
| order_items      |
| travelrecord     |
+------------------+
9 rows in set (0.00 sec)
ql> desc hotnews;
ERROR 1146 (42S02): Table 'db1.hotnews' doesn't exist
mysql>

	2.4.6 分片规则 sharding-by-intfile （枚举法）

]# vim schema.xml
<table name="employee" primaryKey="ID" dataNode="dn1,dn2,dn3"
                           rule="sharding-by-intfile" />

]# vim rule.xml

	<tableRule name="sharding-by-intfile">
                <rule>
                        <columns>sharding_id</columns>
                        <algorithm>hash-int</algorithm>
                </rule>
        </tableRule>

	<function name="hash-int"
                class="io.mycat.route.function.PartitionByFileMap">
                <property name="mapFile">partition-hash-int.txt</property>
	</function>

]# vim  /usr/local/mycat/conf/partition-hash-int.txt
	10000=0
	10010=1
	10020=2
:wq


]# /usr/local/mycat/bin/mycat  stop
]# /usr/local/mycat/bin/mycat  start

		成都中心 掉线了  休息到 15：05 



	2.4.7 根据sharding-by-intfile 规则建表
]# mysql -h192.168.4.56  -P8066 -uroot  -p123456
use TESTDB
create  table employee (
	ID int  primary key  auto_increment,
	sharding_id int,
	name  char(15) , tel char(11)
 );

mysql> desc employee;
+-------------+----------+------+-----+---------+----------------+
| Field       | Type     | Null | Key | Default | Extra          |
+-------------+----------+------+-----+---------+----------------+
| ID          | int(11)  | NO   | PRI | NULL    | auto_increment |
| sharding_id | int(11)  | YES  |     | NULL    |                |
| name        | char(15) | YES  |     | NULL    |                |
| tel         | char(11) | YES  |     | NULL    |                |
+-------------+----------+------+-----+---------+----------------+
4 rows in set (0.02 sec)

	在分片服务器查看创建的表
[root@host53 ~]# mysql -uroot -p123qqq...A -e  "desc db1.employee"
[root@host54 ~]# mysql -uroot -p123qqq...A -e  "desc db2.employee"
[root@host55 ~]# mysql -uroot -p123qqq...A -e  "desc db3.employee"
		连接分片服务器 插入记录   练习到 15:35 
[root@client50 ~]# mysql -h192.168.4.56  -P8066  -uroot -p123456
mysql> use TESTDB;
mysql> insert into employee(sharding_id, name, tel) values(10000,"bob","8866");
mysql> insert into employee(sharding_id, name, tel) values(10010,"tom","7766");
mysql> insert into employee(sharding_id, name, tel) values(10020,"jim","5566");
mysql> insert into employee(sharding_id, name, tel) values(10020,"jim2","5566");
mysql> insert into employee(sharding_id, name, tel) values(10020,"jim3","5566");
mysql> insert into employee(sharding_id, name, tel) values(10020,"jim4","5566");
mysql> select  * from employee;
+----+-------------+------+------+
| ID | sharding_id | name | tel  |
+----+-------------+------+------+
|  1 |       10010 | tom  | 7766 |
|  1 |       10000 | bob  | 8866 |
|  1 |       10020 | jim  | 5566 |
|  2 |       10020 | jim2 | 5566 |
|  3 |       10020 | jim3 | 5566 |
|  4 |       10020 | jim4 | 5566 |
+----+-------------+------+------+
6 rows in set (0.08 sec)
		在分片服务器本机查看数据
[root@host53 ~]# mysql -uroot -p123qqq...A -e  "select  * from db1.employee"
[root@host54 ~]# mysql -uroot -p123qqq...A -e  "select  * from db2.employee"
[root@host55 ~]# mysql -uroot -p123qqq...A -e  "select  * from db3.employee"


	2.4.7 分片规则 mod-long （求模法）

]# vim schema.xml
 <table name="hotnews"  dataNode="dn1,dn2,dn3" rule="mod-long" /> 删除主键和自增长
:wq

]# vim rule.xml
	  <tableRule name="mod-long">
                <rule>
                        <columns>id</columns>    求模字段名
                        <algorithm>mod-long</algorithm>
                </rule>
           </tableRule>


  	<function name="mod-long" class="io.mycat.route.function.PartitionByMod">
                <!-- how many data nodes -->
                <property name="count">3</property> 求模数字
        </function>
:wq

]# /usr/local/mycat/bin/mycat  stop
]# /usr/local/mycat/bin/mycat  start

	客户端连接分片服务器，建表 、存储数据
]# mysql  -h192.168.4.56 -P8066  -uroot -p123456
mysql> use  TESTDB;
mysql> create table hotnews(
    -> id  int ,
    -> title  char(50),
    -> comment char(200),
    -> worker char(10)
    -> );
Query OK, 0 rows affected (0.52 sec)
mysql> insert into hotnews(id,title,comment,worker)
    -> values
    -> (7,"linux","linux web","nb"),
    -> (3,"shell","linux script","wk"),
    -> (11,"ope","vpn","dmy");
mysql> select  * from hotnews;
+------+-------+--------------+--------+
| id   | title | comment      | worker |
+------+-------+--------------+--------+
|    3 | shell | linux script | wk     |
|   11 | ope   | vpn          | dmy    |
|    7 | linux | linux web    | nb     |
+------+-------+--------------+--------+
3 rows in set (0.06 sec)
mysql> insert into hotnews(id,title,comment,worker)
values
(6,"a","a","a"),
(9,"b"，"b","b");
 

	在数据库服务器本机查看表记录
[root@host53 ~]# mysql -uroot -p123qqq...A -e  "select  * from db1.hotnews"
[root@host54 ~]# mysql -uroot -p123qqq...A -e  "select  * from db2.hotnews"
[root@host55 ~]# mysql -uroot -p123qqq...A -e  "select  * from db3.hotnews"


	对表数据不做分片存储
]# vim schema.xml
<table name="company" primaryKey="ID" type="global" dataNode="dn1,dn2,dn3" />

:wq

[root@client50 ~]# mysql -h192.168.4.56  -P8066  -uroot -p123456
mysql> use TESTDB;
mysql> create table company(
    -> id int primary key,
    -> cname  char(15), addr  char(20), epnum int );

mysql> insert into company(id ,cname,addr,epnum)values(1,"tarena","bj",15000);
mysql> insert into company(id ,cname,addr,epnum) values (2,"sina","bj",25000);
mysql> insert into company(id ,cname,addr,epnum) values (3,"babab","hz",30000);
mysql> select  * from company;
+----+--------+------+-------+
| id | cname  | addr | epnum |
+----+--------+------+-------+
|  1 | tarena | bj   | 15000 |
|  2 | sina   | bj   | 25000 |
|  3 | babab  | hz   | 30000 |
+----+--------+------+-------+

[root@host53 ~]# mysql -uroot -p123qqq...A -e  "select  * from db1.company"
[root@host53 ~]# mysql -uroot -p123qqq...A -e  "select  * from db2.company"
[root@host53 ~]# mysql -uroot -p123qqq...A -e  "select  * from db3.company"

	2.4.8 、在mycat服务器上，添加新库、新表
		1 添加新库
[root@mycat56 conf]# vim server.xml 
<user name="root">
                <property name="password">123456</property>
                <property name="schemas">TESTDB,GAMEDB</property>

:wq

		2 添加新表
[root@mycat56 conf]# vim schema.xml
<mycat:schema xmlns:mycat="http://io.mycat/">
        <schema name="GAMEDB" checkSQLschema="false" sqlMaxLimit="100">
                <table name="user" dataNode="dn1,dn2,dn3" rule="mod-long"  />
                <table name="stuinfo" dataNode="dn1,dn2,dn3" rule="sharding-by-intfile" />
        </schema>
:wq
		3 重启mycat服务

[root@mycat56 conf]# /usr/local/mycat/bin/mycat  stop
Stopping Mycat-server...
Stopped Mycat-server.
[root@mycat56 conf]# 
[root@mycat56 conf]# /usr/local/mycat/bin/mycat  start
Starting Mycat-server...
[root@mycat56 conf]# 

[root@mycat56 conf]# netstat -utnlp  | grep  :8066
tcp6       0      0 :::8066                 :::*                    LISTEN      24409/java          
[root@mycat56 conf]# 

		4 客户端测试配置

[root@client50 ~]# mysql -h192.168.4.56  -P8066  -uroot -p123456
mysql> show databases;
+----------+
| DATABASE |
+----------+
| GAMEDB   |
| TESTDB   |
+----------+
2 rows in set (0.00 sec)

mysql>use GAMEDB
mysql> show tables;
+------------------+
| Tables in GAMEDB |
+------------------+
| stuinfo          |
| user             |
+------------------+
2 rows in set (0.00 sec)

mysql> desc user;
ERROR 1146 (42S02): Table 'db3.user' doesn't exist
mysql> 
mysql> create table  user (
    -> id int, name char(10) , class  char(9) ) ;

mysql> insert into user (id , name , class )values(10,"bob","nsd1904");
mysql> insert into user (id , name , class )values(20,"tom","nsd1905");
mysql> insert into user (id , name , class )values(30,"lucy","nsd1903");
mysql> select  * from  user;
+------+------+---------+
| id   | name | class   |
+------+------+---------+
|   30 | lucy | nsd1903 |
|   20 | tom  | nsd1905 |
|   10 | bob  | nsd1904 |
+------+------+---------+
		
[root@host53 ~]# mysql -uroot -p123qqq...A -e  "select  * from  db1.user"
[root@host54 ~]# mysql -uroot -p123qqq...A -e  "select  * from  db2.user"
[root@host55 ~]# mysql -uroot -p123qqq...A -e  "select  * from  db3.user"

#####RDBMS2_day04_MHA集群(MHA软件 + mysql一主多从 )
1 MHA介绍
2 环境准备
	2.1 在所有主机上,安装系统光盘里的perl软件包
		]# yum -y  install perl-*

	2.2 在所有主机上,安装共享目录里的perl软件包
	]# cd mha-soft-student
	]# yum -y  install perl-*  
		

	2.3 配置ssh无密码连接
		2.3.1 所有数据库服务器之间彼此无密码登陆
51]# ssh-keygen 
51]# ssh-copy-id  root@192.168.4.52
51]# ssh-copy-id  root@192.168.4.53
51]# ssh root@192.168.4.52
51]# ssh root@192.168.4.53

52]# ssh-keygen 
52]# ssh-copy-id  root@192.168.4.51
52]# ssh-copy-id  root@192.168.4.53
52]# ssh root@192.168.4.51
52]# ssh root@192.168.4.53


53]# ssh-keygen 
53]# ssh-copy-id  root@192.168.4.51
53]# ssh-copy-id  root@192.168.4.52
53]# ssh root@192.168.4.51
53]# ssh root@192.168.4.52

		2.3.2 管理主机57 无密码ssh所有数据库服务器
57]#ssh-keygen 
57]#ssh-copy-id  root@192.168.4.51
57]#ssh-copy-id  root@192.168.4.52
57]#ssh-copy-id  root@192.168.4.53
57]#ssh  root@192.168.4.51
57]#ssh  root@192.168.4.52
57]#ssh  root@192.168.4.53



3 配置管理主机 192.168.4.57
	3.1 安装软件
  110  rpm -ivh mha4mysql-node-0.56-0.el6.noarch.rpm 
  111  ls
  112  tar -zxvf mha4mysql-manager-0.56.tar.gz 
  113  ls
  114  cd mha4mysql-manager-0.56/
  115  ls
  116  which perl
  117  perl Makefile.PL 
  118  make
  119  make install

	3.2 编辑主配置文件
[root@host57 mha4mysql-manager-0.56]# mkdir  /etc/mha
[root@host57 mha4mysql-manager-0.56]# cp samples/conf/app1.cnf  /etc/mha/
[root@host57 mha4mysql-manager-0.56]# ls /etc/mha/
app1.cnf
[root@host57 mha4mysql-manager-0.56]# vim /etc/mha/app1.cnf 
[server default]
manager_workdir=/etc/mha
manager_log=/etc/mha/manager.log
master_ip_failover_script=/etc/mha/master_ip_failover
ssh_user=root
ssh_port=22
repl_user=repluser
repl_password=123qqq...A
user=root 		          
password=123qqq...A 	  
[server1]
hostname=192.168.4.51
candidate_master=1
[server2]
hostname=192.168.4.52
candidate_master=1
[server3]
hostname=192.168.4.53
candidate_master=1
:wq

[root@host57 mha4mysql-manager-0.56]#

	3.3 创建故障切换脚本
[root@host57 mha-soft-student]# cp master_ip_failover  /etc/mha/
[root@host57 mha-soft-student]# chmod +x /etc/mha/master_ip_failover
 
[root@host57 mha-soft-student]# vim  +35 /etc/mha/master_ip_failover
my $vip = '192.168.4.100/24';  # Virtual IP 
my $key = "1";
my $ssh_start_vip = "/sbin/ifconfig eth0:$key $vip";
my $ssh_stop_vip = "/sbin/ifconfig eth0:$key down";

:wq

4 配置数据库服务器
	4.1 配置mysql 一主多从
		配置主数据库服务器51
			]# vim /etc/my.cnf
				[mysqld]
     				server_id=51
     				log-bin=master51
			:wq
			]# systemctl  restart  mysqld
			]# mysql -uroot  -p123qqq...A
			mysql> grant  replication slave  on  *.*  
				to repluser@"%"  identified by “123qqq…A";

			Mysql> show  master  status;

		配置从数据库服务器52
			]# vim /etc/my.cnf
				[mysqld]
     				server_id=52
			:wq
			]# systemctl  restart  mysqld
			]# mysql -uroot -p123qqq...A
			mysql> change master  to  master_host="192.168.4.51",
				master_user="repluser",
				master_password="123qqq...A" ,
				master_log_file="master51.000001", 
				master_log_pos=441; 
			mysql> start slave;

		配置从数据库服务器53
			]# vim /etc/my.cnf
			[mysqld]
     			server_id=53
			:wq
			]# systemctl  restart  mysqld

			]# mysql -uroot -p123qqq...A
			mysql> change master  to  master_host="192.168.4.51",
				master_user="repluser",
				master_password="123qqq...A" ,
				master_log_file="master51.000001", master_log_pos=441;

			mysql> start slave;


	4.2 根据管理主机的定义, 配置数据库服务器.
		1、在2台从服务器上添加repluser用户
mysql> grant  replication  slave  on  *.*   to  repluser@"%" identified  by  "123qqq...A";
mysql> show grants for repluser@"%";
		2、在2台从服务器上启用binlog日志文件,要重启mysql服务
			log-bin=日志名
		3、在3台数据库服务器上开启半同步复制模式,要重启mysql服务
plugin-load="rpl_semi_sync_master=semisync_master.so;rpl_semi_sync_slave=semisync_slave.so"
rpl-semi-sync-master-enabled = 1
rpl-semi-sync-slave-enabled = 1
		4、在3台数据库服务器上，禁止删除中继续日志文件,要重启mysql服务
			relay_log_purge=0
		5、把vip地址部署的当前的主服务器51上
[root@host51 ~]# ifconfig  eth0:1  192.168.4.100
[root@host51 ~]# 
[root@host51 ~]# ifconfig  eth0:1
eth0:1: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
        inet 192.168.4.100  netmask 255.255.255.0  broadcast 192.168.4.255
        ether 52:54:00:0c:a4:19  txqueuelen 1000  (Ethernet)

		6、在3台数据库服务器上，管理主机使用的root监控用户
mysql> grant  all  on  *.*  to  root@"%"  identified  by "123qqq...A";     
mysql> show grants for  root@"%";

		7、在3台数据库服务器上，安装MHA_node软件
		]# cd mha-soft-student/
  		]# rpm -ivh mha4mysql-node-0.56-0.el6.noarch.rpm 
5 测试配置
	5.1 测试ssh配置
		[root@host57 ~]# masterha_check_ssh --conf=/etc/mha/app1.cnf

	5.2 测试主从同步
		[root@host57 ~]# masterha_check_repl --conf=/etc/mha/app1.cnf

6 启动管理服务 192.168.4.57
		6.1 启动管理服务
[root@host57 ~]# masterha_check_status --conf=/etc/mha/app1.cnf
app1 is stopped(2:NOT_RUNNING).
[root@host57 ~]# 

[root@host57 ~]# masterha_manager --conf=/etc/mha/app1.cnf --remove_dead_master_conf  
                 --ignore_last_failover


[root@host57 ~]# masterha_check_status --conf=/etc/mha/app1.cnf
app1 (pid:26718) is running(0:PING_OK), master:192.168.4.51
[root@host57 ~]# 

		6.2 连接vip地址 访问数据库服务
			6.2.1 在主服务器添加授权用户

[root@host51 ~]# mysql -uroot -p123qqq...A -e  "create database db9"
[root@host51 ~]# mysql -uroot -p123qqq...A -e  "create table db9.a(id int)"
[root@host51 ~]# mysql -uroot -p123qqq...A -e  'grant select , insert on db9.* to yaya55@"%" identified by "123qqq...A"'
	
			6.2.2 客户端连接vip地址访问数据
[root@client50 ~]# mysql -h192.168.4.100 -uyaya55  -p123qqq...A
mysql> select  * from db9.a;
mysql> insert into db9.a values(100);
mysql> select  * from db9.a;
+------+
| id   |
+------+
|  100 |
+------+
1 row in set (0.00 sec)

mysql>

7 测试高可用集群
	7.1 停止主服务器51 的数据库服务  
          	51]# systemctl   stop    mysqld
	7.2 在2台从服务器上查看vip地址 （查看到vip 地址的是新选举的主服务器）
		]# ifconfig  eth0:1
        7.3 客户端连接vip地址访问数据
[root@client50 ~]# mysql -h192.168.4.100 -uyaya55  -p123qqq...A
mysql> insert into db9.a values(200);
mysql> insert into db9.a values(300);
mysql> select  * from db9.a;
+------+
| id   |
+------+
|  100 |
|  200 |
|  300 |
+------+
3 rows in set (0.00 sec)

	7.4 启动管理服务，并查看服务状态
		[root@host57 ~]# masterha_manager --conf=/etc/mha/app1.cnf --remove_dead_master_conf  --ignore_last_failover

		[root@host57 ~]# masterha_check_status --conf=/etc/mha/app1.cnf
app1 (pid:27397) is running(0:PING_OK), master:192.168.4.52

	8 修复故障服务器
		8.1 配置数据库服务器
启动mysql服务
与主服务器数据一致
指定主服务器信息
启动slave进程
查看状态信息


[root@host52 ~]# mysqldump -uroot -p123qqq...A --master-data db9  > /root/db9.sql
[root@host52 ~]# scp /root/db9.sql  192.168.4.51:/root/

[root@host51 ~]# systemctl  start mysqld
[root@host51 ~]# mysql -uroot -p123qqq...A  db9 < /root/db9.sql 
[root@host51 ~]# grep db52 /root/db9.sql 
CHANGE MASTER TO MASTER_LOG_FILE='db52.000001', MASTER_LOG_POS=648;

ot@host51 ~]# mysql -uroot -p123qqq...A
mysql> change master to master_host="192.168.4.52",master_user="repluser",master_password="123qqq...A",master_log_file="db52.000001",master_log_pos=648;
Query OK, 0 rows affected, 2 warnings (0.14 sec)

mysql> start slave;
Query OK, 0 rows affected (0.01 sec)

mysql> show slave status\G;

		8.2 配置管理服务器 
修改主配置文件
测试集群环境
重启管理服务
查看服务状态

[root@host57 ~]# vim /etc/mha/app1.cnf 
[server1]
candidate_master=1
hostname=192.168.4.51

:wq

[root@host57 ~]# masterha_stop --conf=/etc/mha/app1.cnf
Stopped app1 successfully.
[root@host57 ~]# 

[root@host57 ~]# masterha_check_ssh --conf=/etc/mha/app1.cnf
[root@host57 ~]# masterha_check_repl --conf=/etc/mha/app1.cnf

[root@host57 ~]# masterha_manager --conf=/etc/mha/app1.cnf --remove_dead_master_conf  --ignore_last_failover


[root@host57 ~]# masterha_check_status --conf=/etc/mha/app1.cnf
app1 (pid:27926) is running(0:PING_OK), master:192.168.4.52
[root@host57 ~]# 

#################RDBMS2_DAY05
1、PXC
	1.1.PXC介绍 ?
	1.2 配置pxc集群
		1 主机名绑定(3台数据库服务器都要配置)


		2 安装软件 (3台 都需要安装)
]# rpm -ivh libev-4.15-1.el6.rf.x86_64.rpm 
]# yum -y install percona-xtrabackup-24-2.4.13-1.el7.x86_64.rpm 
]# rpm -ivh qpress-1.1-14.11.x86_64.rpm 
]# tar -xvf Percona-XtraDB-Cluster-5.7.25-31.35-r463-el7-x86_64-bundle.tar 
]# yum -y install Percona-XtraDB-Cluster-*.rpm

		3 修改配置文件
			3.1 修改数据库服务运行参数配置文件   (3台 都需要安装)
			]# cd /etc/percona-xtradb-cluster.conf.d/
			]# vim mysqld.cnf 
		   		server-id=71  (3台服务器不允许重复)
			:wq

			3.2 修改 Percona Server 5.7 配置文件 (3台 都需要安装)
			]# vim mysqld_safe.cnf 不需要修改使用默认配置

			3.3  修改PXC集群配置文件  (3台 都需要安装)
]# vim  wsrep.cnf
wsrep_cluster_address=gcomm://192.168.4.71,192.168.4.72,192.168.4.73  //集群成员列表
wsrep_node_address=192.168.4.71  	//本机ip地址
wsrep_cluster_name=pxc-cluster 		//集群名称,3台必须相同
wsrep_node_name=pxcnode71		//本机主机名
wsrep_sst_auth=“sstuser:123qqq…A”	//SST数据同步授权用户			
:wq


			4 启动集群服务(192.168.4.71)
]# systemctl  start mysql@bootstrap.service
]# ls /var/lib/mysql
]# netstat -utnlp  | grep  :3306
]# netstat -utnlp  | grep  :4567

]# grep pass /var/log/mysqld.log 
]# mysql -uroot  -p'sfd7hdksjT;v'
mysql> alter user  root@"localhost" identified by "123qqq...A";
mysql> 
mysql> grant  reload , lock tables , replication client , process
    -> on  *.* to sstuser@"localhost" identified by "123qqq...A" ;

		      5 启动mysql服务（192.168.4.72 / 192.168.4.73）
		
]# systemctl  start mysql
]# ls /var/lib/mysql
]#  netstat -utnlp  | grep  :3306
]#  netstat -utnlp  | grep  :4567
]# mysql -uroot -p123qqq...A
mysql> show grants for sstuser@"localhost";

		6、测试配置 
			6.1 查看主机在集群中的状态  
				mysql> show status lik  "%wsrep%";
	;
			6.2 客户端连接集群种的主机，访问数据。
				6.2.1 在任意1台数据库服务器上添加访问数据的连接用户
[root@pxcnode72 ~]# mysql -uroot -p123qqq...A
mysql> grant  all on db10.*  to yaya10@"%" identified by "123qqq...A";

				6.2.2 在其他2台数据库服务器上查看授权用户权限
[root@pxcnode71 ~]# mysql -uroot  -p123qqq...A -e 'show grants for yaya10@"%"'
[root@pxcnode73 ~]# mysql -uroot  -p123qqq...A -e 'show grants for yaya10@"%"'
			
				6.2.3 客户端50连接集群中任意1台数据库服务器，访问数据
[root@client50 ~]# mysql -h192.168.4.73 -uyaya10  -p123qqq...A
mysql> show grants;
mysql> show databases;
mysql> create  database db10;
mysql> create table db10.b(id int primary key auto_increment,name char(10));
mysql> insert into db10.b(name) values("bob");
mysql> insert into db10.b(name) values("bob2");
mysql> insert into db10.b(name) values("bob3");
mysql> select  * from db10.b;

[root@client50 ~]# mysql -h192.168.4.72 -uyaya10  -p123qqq...A
mysql> select  * from db10.b;

[root@client50 ~]# mysql -h192.168.4.71 -uyaya10  -p123qqq...A
mysql> select  * from db10.b;

				6.2.3 测试故障自动恢复
					任何1台服务器宕机都不影响用户存取数据
					服务器运行后 自动同步宕机期间的数据

			休息到 15：15

2、MySQL存储引擎
	2.1 存储引擎介绍
	2.2 列出可用的存储引擎类型
	    mysql> show  engines;

	2.3 查看表使用的存储引擎

	2.4 创建表时指定表使用的存储引擎

	2.5 修改服务存储引擎   default-storage-engine=myisam


	2.6 存储引擎特点
		2.6.1 myisam 引擎特点
		2.6.2 innodb 引擎特点
		2.6.3 锁粒度
		2.6.4 锁类型
		2.6.7 事务的特点 ACID

关闭第1个连接的自动提交功能
mysql> set autocommit=off ;
Query OK, 0 rows affected (0.00 sec)

mysql>  show variables  like "autocommit";
+---------------+-------+
| Variable_name | Value |
+---------------+-------+
| autocommit    | OFF   |
+---------------+-------+
1 row in set (0.00 sec)


	mysql> create  table  db10.t1( name char(15) )engine=innodb;

	mysql> select  * from  db10.t1;

在第2个连接，查看新表及表记录
	 mysql> select  * from  db10.t1;

在第1个连接,向表里插入新记录
	mysql> insert into db10.t1 values("xdd");
	mysql> select  * from db10.t1;


在第2个连接,查看表记录 mysql> select  * from db10.t1; 看不到记录

在第1个连接,执行提交命令mysql> commit ;


在第2个连接,查看表记录 mysql> select  * from db10.t1; 看到记录
	
		数据回滚操作  练习到 17：50 
			
在第1个连接,执行如下操作：
	mysql> select  * from  db10.t1;
	mysql> delete from  t1;
	mysql> insert into  db10.t1 values("pmm"),("pmm");
	mysql> update  db10.t1 set name="pmv";
	mysql>  select  * from  db10.t1;


在第2个连接,执行如下操作： mysql>  select  * from  db10.t1; 看不到数据


在第1个连接,执行如下操作： mysql> rollback ; 回滚
			   mysql> select  * from db10.t1;


在第2个连接,执行如下操作： mysql>  select  * from  db10.t1; 查看数据









