总结:
 dhcp--->IP地址   next-server  filename
 tftp--->pxelinux.0
 pxelinux.0--->读取default菜单文件
 default--->图形模块  背景  内核  驱动   ks应答文件
 ks应答文件--->语言  分区  密码  时区 ...  指定获取软件包的方式
  获取软件包的方式---> --url="http://192.168.4.7/centos"
###################################################
rsync同步操作

rsync同步操作
• 命令用法
– rsync [选项...]   源目录     目标目录

• 同步与复制的差异
– 复制:完全拷贝源到目标
– 同步:增量拷贝,只传输变化过的数据

同步控制
• rsync操作选项
– -n:测试同步过程,不做实际修改
– --delete:删除目标文件夹内多余的文档
– -a:归档模式,相当于-rlptgoD
– -v:显示详细操作信息
– -z:传输过程中启用压缩/解压


[root@svr7 ~]# mkdir   /dir01     /abc
[root@svr7 ~]# cp /etc/passwd /etc/fstab  /dir01
[root@svr7 ~]# ls /dir01

[root@svr7 ~]# rsync -avz   /dir01    /abc/  #同步目录本身
[root@svr7 ~]# ls /abc
[root@svr7 ~]# ls /abc/dir01/

[root@svr7 ~]# rsync -avz /dir01/   /abc/  #同步目录内容
[root@svr7 ~]# ls /abc/

[root@svr7 ~]# touch /dir01/1.txt
[root@svr7 ~]# ls /dir01/
[root@svr7 ~]# rsync -avz /dir01/   /abc/
[root@svr7 ~]# ls /abc/


[root@svr7 ~]# ls /dir01/
[root@svr7 ~]# ls /abc/
[root@svr7 ~]# touch /abc/haha.txt
[root@svr7 ~]# ls /abc/

[root@svr7 ~]# rsync -avz --delete  /dir01/  /abc/
[root@svr7 ~]# ls /abc/

[root@svr7 ~]# touch /abc/{1..5}.txt
[root@svr7 ~]# ls /abc/
[root@svr7 ~]# rsync -avz --delete  /dir01/  /abc/
[root@svr7 ~]# ls /abc/

###################################################
rsync+SSH同步

• 与远程的 SSH目录保持同步
– 下行:rsync [...]  user@host:远程目录      本地目录

– 上行:rsync [...]  本地目录   user@host:远程目录



虚拟机A:	
[root@svr7 ~]# rsync -avz --delete  /dir01/    root@192.168.4.207:/opt/

虚拟机B:
[root@pc207 ~]# ls /opt/

###################################################
虚拟机A:	
[root@svr7 ~]# touch /dir01/xixi.txt
[root@svr7 ~]# rsync -avz --delete  /dir01/ root@192.168.4.207:/opt/

虚拟机B:
[root@pc207 ~]# ls /opt

###################################################
实时同步

虚拟机A
一  生成公钥与私钥,实现ssh无密码验证
[root@svr7 ~]# ssh-keygen     #一路回车
[root@svr7 ~]# ls /root/.ssh/
authorized_keys(别的机器传递过来的公钥)  id_rsa(私钥)  id_rsa.pub(公钥) 

[root@svr7 ~]# ssh-copy-id root@192.168.4.207

[root@svr7 ~]# rsync -avz --delete  /dir01/ root@192.168.4.207:/opt/


二  监控目录内容的变化

安装inotify-tools工具                                         
真机上:
[student@room9pc01 ~]$ ls /linux-soft/01/
Cobbler.zip  tools.tar.gz
[student@room9pc01 ~]$ scp /linux-soft/01/tools.tar.gz    root@192.168.4.7:/root

1.让虚拟机A具备inotify-tools-3.13.tar.gz
[root@svr7 /]# ls /root/
[root@svr7 /]# mkdir /test
[root@svr7 /]# tar -xf /root/tools.tar.gz -C /test
[root@svr7 /]# ls /test
[root@svr7 /]# ls /test/tools/

步骤1:安装依赖关系包(安装开发工具)
]# yum -y install  gcc  make
步骤2:tar解包,释放源代码至指定目录
]# tar -xf /test/tools/inotify-tools-3.13.tar.gz -C /opt
]# ls /opt
]# cd /opt/inotify-tools-3.13/
]# ls
步骤3: ./configure 配置,指定安装目录/功能模块等选项
]# cd /opt/inotify-tools-3.13/
]# ./configure 
步骤4:make 编译,生成可执行的二进制程序文件
]# make
步骤5:make install 安装,将编译好的文件复制到安装目录
]# make install
]# ls /usr/local/bin/inotifywait 


inotifywait监控
• 基本用法
– inotifywait  [选项]  目标文件夹

• 常用命令选项
– -m,持续监控(捕获一个事件后不退出)
– -r,递归监控、包括子目录及文件
– -q,减少屏幕输出信息
– -e,指定监视的 modify、move、create、delete、attrib等事件类别

三  书写Shell脚本

    for循环:适合有规定次数的循环
    while适合死循环:次数无限及无法确定

        while  [条件]
        do
                重复执行操作
        done

[root@svr7 /]# vim /opt/rsync.sh
#!/bin/bash
while  inotifywait  -rqq  /dir01 
do
 rsync -az --delete  /dir01/  root@192.168.4.207:/opt/
done

[root@svr7 /]# chmod +x /opt/rsync.sh

[root@svr7 /]# /opt/rsync.sh

#################################################






















































