教学环境介绍

使用教学虚拟机

• 每个学员机上有三台预先配置好的虚拟机
– server —— 作为练习用服务器
– desktop —— 作为练习用客户机
– classroom —— 提供网关/DNS/软件素材等资源

优先开启classroom虚拟机

真机上:使用rht-vmctl辅助工具
• 控制教学用虚拟机
– 格式:rht-vmctl 控制指令 虚拟机名
– 常用控制指令:
[student@room9pc01 ~]$ rht-vmctl 　reset　 classroom
classroom [OK]
域 classroom 已开始

[student@room9pc01 ~]$ rht-vmctl　 reset　 server
server [OK]
域 server 已开始

[student@room9pc01 ~]$ rht-vmctl 　reset　 desktop
desktop [OK]
域 desktop 已开始

虚拟机server与虚拟机desktop,利用root登录密码为redhat
#################################################
字体变大：ctrl   shift   +
字体变小：ctrl   -

#################################################
虚拟机server:
  1.查看系统的版本:RHEL7.0
  2.查看eth0网卡的IP地址:172.25.0.11/24  
  3.查看主机名:server0.example.com

虚拟机desktop:
  1.查看系统的版本:RHEL7.0
  2.查看eth0网卡的IP地址:172.25.0.10/24  
  3.查看主机名:desktop0.example.com

#################################################
利用真机,远程管理两台虚拟机
1.前提真机可以与两台虚拟机通信
[student@room9pc01 ~]$ ping 172.25.0.11

[student@room9pc01 ~]$ ping 172.25.0.10

2.真机上,ssh命令进行远程管理

    ssh   对方用户名@对方IP地址
[student@room9pc01 ~]$ ssh　root@172.25.0.11 

[student@room9pc01 ~]$ ssh　root@172.25.0.10

开启一个新的终端：ctrl + shift + t

   -X(大写):在远程管理时,开启对方的图形程序

[root@server0 ~]# exit
登出
Connection to 172.25.0.11 closed.
[student@room9pc01 ~]$ ssh -X root@172.25.0.11
[root@server0 ~]# firefox           #火狐浏览器

[root@server0 ~]# firewall-config   #防火墙图形配置工具


常见提示:dconf桌面服务报错,与远程管理无关
(process:30405): dconf-WARNING **: failed to commit changes to dconf: 无法连接：拒绝连接

###################################################
补充:为真机,设置永久的别名,修改系统级配置文件
   ~/.bashrc  #设置永久别名配置文件,每开一个终端会被执行一次

[student@room9pc01 ~]$ vim /home/student/.bashrc
# .bashrc
alias  gos='ssh  -X  root@172.25.0.11'
alias  god='ssh  -X  root@172.25.0.10'

新开一个终端验证:
[student@room9pc01 ~]$ gos
[student@room9pc01 ~]$ god

#################################################
权限和归属

基本权限

• 访问方式(权限)
– 读取:允许查看内容-read  r
– 写入:允许修改内容-write  w
– 可执行:允许运行和切换-execute  x

  对文本文件:
       r: cat less head tail 
       w: vim 保存   >   >>
       x: 书写Shell脚本或Python脚本

• 权限适用对象(归属)
– 所有者(属主):拥有此文件/目录的用户-user  u
– 所属组(属组):拥有此文件/目录的组-group    g
– 其他用户:除所有者、所属组以外的用户-other   o

     zhangsan       1.txt
         所有者的基本组成为该文件的所属组

####################################################
查看权限
• 使用 ls -l 命令
– ls -ld 文件或目录...

   以d开头:目录
   以-开头:文件
   以l开头:快捷方式

[root@server0 ~]# ls -ld /etc/
[root@server0 ~]# ls -l /etc/passwd

[root@server0 ~]# ls -l /etc/shadow
[root@server0 ~]# ls -ld /home/student
[root@server0 ~]# ls -ld /tmp
####################################################
设置基本权限
• 使用 chmod 命令
– chmod  归属关系+-=权限类别  文档...

   [-R]:递归设置权限

[root@server0 ~]# mkdir /nsd01
[root@server0 ~]# ls -ld /nsd01

[root@server0 ~]# chmod g+w /nsd01
[root@server0 ~]# ls -ld /nsd01

[root@server0 ~]# chmod u-w /nsd01
[root@server0 ~]# ls -ld /nsd01

[root@server0 ~]# chmod o=--- /nsd01
[root@server0 ~]# ls -ld /nsd01

[root@server0 ~]# chmod u=rwx,g=rx,o=rx /nsd01
[root@server0 ~]# ls -ld /nsd01

[root@server0 ~]# chmod ugo=rwx /nsd01
[root@server0 ~]# ls -ld /nsd01

[root@server0 ~]# mkdir -p /opt/aa/bb/cc
[root@server0 ~]# ls -ld /opt/aa
[root@server0 ~]# ls -ld /opt/aa/bb/
[root@server0 ~]# ls -ld /opt/aa/bb/cc/

[root@server0 ~]# chmod -R o=--- /opt/aa
[root@server0 ~]# ls -ld /opt/aa

##################################################
Linux判定用户具备的权限                      匹配及停止
    1.判定用户对该文档的身份               所有者>所属组>其他人       
    2.查看相应身份 权限位的权限
  
Permission denied :权限不足

目录的 r 权限:能够 ls 浏览此目录内容
目录的 w 权限:能够执行 rm/mv/cp/mkdir/touch/等更改目录内容的操作
目录的 x 权限:能够 cd 切换到此目录


以root用户新建/nsddir目录，在此目录下新建readme.txt文件
并进一步完成下列操作
 1）使用户lisi能够在此目录下创建子目录     切换用户 su  -  lisi
     chmod o+w  /nsddir/
 2）使用户lisi不能够在此目录下创建子目录
     chmod o-w  /nsddir/
 3）使用户lisi能够修改readme.txt文件内容
     chmod o+w  /nsddir/readme.txt
 4）调整此目录的权限，使所有用户都不能cd进入此目录
     chmod u-x,g-x,o-x  /nsddir/
 5）为此目录及其下所有文档设置权限 rwxr-x---
     chmod -R  u=rwx,g=rx,o=---  /nsddir/
　　　-R：递归设置权限，目录下及目录下所有

##################################################
设置文档归属
• 使用 chown 命令
– chown [-R] 属主       文档...
– chown [-R] :属组      文档...
– chown [-R] 属主:属组   文档...

[root@server0 ~]# groupadd tedu
[root@server0 ~]# mkdir /nsd03
[root@server0 ~]# ls -ld /nsd03

[root@server0 ~]# chown lisi:tedu /nsd03
[root@server0 ~]# ls -ld /nsd03

[root@server0 ~]# chown zhangsan /nsd03
[root@server0 ~]# ls -ld /nsd03

[root@server0 ~]# chown :root  /nsd03
[root@server0 ~]# ls -ld /nsd03

################################################
利用root用户新建/nsd06目录，并进一步完成下列操作
1）将属主设为gelin01，属组设为tarena组              
[root@server0 /]# useradd gelin01
[root@server0 /]# useradd gelin02
[root@server0 /]# groupadd tarena
[root@server0 /]# chown gelin01:tarena  /nsd06
2）使用户gelin01对此目录具有rwx权限
      除属主与属组之外的人，对此目录无任何权限
[root@server0 /]# chmod o=--- /nsd06
3）使用户gelin02能进入、查看此目录内容
[root@server0 /]# gpasswd -a  gelin02  tarena
4）将gelin01加入tarena组, 将nsd06目录的权限设为rw-r-x---
      再测试gelin01用户能否进入此目录
[root@server0 /]# gpasswd -a  gelin01  tarena
[root@server0 /]# chmod u=rw,g=rx /nsd06
###################################################
让lisi用户可以读取/etc/shadow文件内容,您有几种办法  
   1.利用其他用户
      chmod  o+r  /etc/shadow
           
   2.利用所属组
      chown :lisi  /etc/shadow
      chmod  g+r   /etc/shadow

   3.利用所有者
      chown  lisi  /etc/shadow
      chmod  u+r   /etc/shadow
###################################################
附加权限(特殊权限)

Set GID
• 附加在属组的 x 位上
属组的权限标识会变为 s
适用于目录,Set GID可以使目录下新增的文档自动设置与父目录相同的属组
让父目录下,新增的子文档继承父目录的所属组身份

[root@server0 ~]# mkdir /nsd07
[root@server0 ~]# chown :tedu /nsd07   #修改所属组
[root@server0 ~]# ls -ld /nsd07

[root@server0 ~]# mkdir /nsd07/abc
[root@server0 ~]# ls -ld /nsd07/abc
[root@server0 ~]# chmod g+s /nsd07/    #设置Set GID权限
[root@server0 ~]# ls -ld /nsd07/

[root@server0 ~]# mkdir /nsd07/test
[root@server0 ~]# ls -l /nsd07/

[root@server0 ~]# touch /nsd07/1.txt
[root@server0 ~]# ls -l /nsd07/

###################################################

        /nsd09  rwx  r-x ---  存放打卡记录
         2019-5-6.txt
         2019-5-7.txt
         2019-5-8.txt
         2019-5-9.txt

        groupadd  caiwu

        chown  :caiwu  /nsd09
        chmod  g+s   /nsd09

##################################################
Set UID
• 附加在属主的 x 位上
属主的权限标识会变为 s
适用于可执行文件,Set UID可以让使用者具有文件属主的身份及部分权限

[root@server0 ~]# /usr/bin/mkdir /opt/haha   
[root@server0 ~]# ls /opt/
[root@server0 ~]# cp /usr/bin/mkdir /usr/bin/hahadir
[root@server0 ~]# /usr/bin/hahadir /opt/xixi
[root@server0 ~]# ls /opt/
[root@server0 ~]# chmod u+s /usr/bin/hahadir 
[root@server0 ~]# ls -l /usr/bin/hahadir
[root@server0 ~]# su - lisi
[lisi@server0 ~]$ /usr/bin/mkdir  test01
[lisi@server0 ~]$ /usr/bin/hahadir test02
[lisi@server0 ~]$ ls
test01  test02
[lisi@server0 ~]$ ls -l
[lisi@server0 ~]$ exit
###################################################

Sticky Bit
• 附加在其他人的 x 位上
其他人的权限标识会变为 t
适用于开放 w 权限的目录,可以阻止用户滥用 w 写入权限(禁止操作别人的文档)

[root@server0 ~]# mkdir /public
[root@server0 ~]# chmod ugo=rwx /public
[root@server0 ~]# ls -ld /public

[root@server0 ~]# chmod o+t /public/
[root@server0 ~]# ls -ld /public/

##############################################






































