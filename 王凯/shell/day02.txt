
条件测试:

一.字符串匹配

语法格式
使用“test 表达式”或者[ 表达式 ]都可以，表达式两边至少要留一个空格。

1）== 比较两个字符串是否相同
[zengye@svr5 ~]$ [ $USER == "root" ]
[zengye@svr5 ~]$ echo $?                    //查看结果0为对，非0为错

2）!= 比较两个字符串是否不相同
[zengye@svr5 ~]$ [ $USER != "root" ] 

3）一行执行多条命令的情况
# A || B         //仅当A命令执行失败，才执行B命令  或
# A && B         //仅当A命令执行成功，才执行B命令  且
# A ;  B         //执行A命令后执行B命令，两者没有逻辑关系
# A && B || C    //A且B,或C

4) -z 检查变量的值是否未设置（空值）
! -z 与 - n 一样
[ -z $a ] 	//测试变量a是否为空,是空返回0

多个逻辑符号连用时:
|| 或,前后任务有一个成功就算成功
&& 且,前后任务都成功,才算成功
[ ! -z $a ] 或 [ -n $a ]	//测试变量a,不是空返回0
[ ! -z $a ] && echo "a不是空的" || echo "a是空的"

##############################################################################

二.比较数值大小

-gt大于 -ge大于等于 -eq等于 -ne不等于 -lt小于 -le小于等于

脚本:每两分钟检查登录用户数量,超过三人报警
[root@server0 opt]# vim ceshi.sh
#!/bin/bash
a=`who|wc -l`
[ $a -gt 3 ] && echo "已有$a人登录" |  mail -s test root
[root@server0 opt]# crontab -e -u root
*/2 * * * * /bin/bash /opt/ceshi.sh

###################################################


3.识别文件/目录的状态
-r -w -x 
-e存在  -f存在且是文件 -d存在且是目录
[ -r  txt ]	//测试当前用户对文件txt有没有读权限(对root无效)
[ -w  txt ]	//测试当前用户对文件txt有没有写权限(对root无效)
[ -x  txt ]	//测试当前用户对文件txt有没有执行权限
[ -e  txt ]	//txt是否存在,不在乎文件类型
[ -f  txt ]	//txt是否存在,必须是文件
[ -d  txt ]	//txt是否存在,必须是目录


4.多个条件/操作的逻辑组合
&&   ||

== 	!=	-z	!-z(-n)	-eq	-ne	-gt 	-ge	-lt	-le	-r	-w	-x	-e	-f	-d	

##########################################################################################################

if判断

单分支
if  条件测试;then
	执行指令
fi


双分支
if 	条件测试;then
	命令序列1
else
	命令序列2
fi


多分支
if	条件测试;then
	命令序列1
elif	条件测试;then
	命令序列2
else
	命令序列3
fi

########################################################

for循环
for 变量名  in  参数1 参数2 参数3 .....
do
    任务指令
done

1.有变量有关,而且关心循环次数
2.只关心循环次数


大括号造数
#!/bin/bash
for i in  {0..8}
do 
    echo nb
done

seq造数工具:
#!/bin/bash
for i in  `seq 8`
do 
    echo nb
done

seq造数工具:
#!/bin/bash
x=5
for i in `seq $x`
do    
    echo nb
done

批量创建用户:
#!/bin/bash
for i in `cat /opt/user`
do
useradd $i &> /dev/null
done

修改vim tab间隔几个字符
vim /etc/vimrc
第一行添加  set ts=4   //修改为间隔四个字符 


编辑脚本实现一次性检测12台主机,显示结果及总数
#!/bin/bash
a=0
b=0
for i in {1..12}
do
    ping -c 3 -i 0.2 -W 1 172.25.0.$i  &> /dev/null
    if [  $? -eq 0 ];then
        echo "172.25.0.$i 通了"
    let a++
    else
        echo "172.25.0.$i 不通"
    let b++
    fi
done
echo "$a台通了,$b 台没通"



while 循环
while 条件测试
do
	任务序列
done

























































