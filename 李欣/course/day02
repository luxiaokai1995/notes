***************************************COURSE*DAY02**********************************
一 : ansible七种武器
	1 ansible命令,用于执行临时性工作
	2 ansible-doc ,是ansible模块的文档说明,帮助信息
	3 ansible-console ,为用户提供的交互式工具
	4 ansible-galaxy ,从github上下载管理的工具,与Python的pip\类似
	5 ansible-playbook,日常工作中使用频率最高的命令,工作机制 :通过事先编好的文件批量管理可以理解为一定条件组成的任务集
	6 ansible-vault 用于配置文件加密,即可加密又可解密,不太实用
	7 ansible-pull ansible有两种工作模式 pull|push,工作机制正好相反.push主动下发,pull需要客户机自己主动获取

二 : JSON简介
		是JavaScript对象表示法,是一种基于文本独立与语言的轻量级数据交换格式
		分隔符a  '   ()   []  {}  :   ,
	JSON特性: 纯文本  自我描述性(人类可读) 具有层级结构   可通过JavaScript解析
	
	语法规则:
		数据在名称/值对中
		数据由逗号分隔
		大括号保存对象
		中括号保存数组
	书写格式: 
			名称/值对包括字段名称(在双引号中),后面一个冒号,然后是值   "诗仙":"李白"
		数组语法:
			{"诗人"
				["a","b","c","d"]
			}
		符合复杂类型:
			{"诗人":
				[{a:b,c:d}
				 {e:f,g;h}
				 {r:o,t:s}
				]
			}		

三: YAML简介
	基础语法 : 
		结构通过空格来表示
		数组使用"-  "来表示
		键值使用":  "来表示
		YAML使用一个固定的缩进风格来表示层级结构关系
		一般每个缩进级别用两个空格组成
		# 表示注释
	哈希数组符合表达式例子:
		"诗人":
		  - "李白"
		  - "杜甫"
		  - "白居易"
		  - "李贺"

	高级复合表达式例子: 
		"诗人":
		  - 
		    "李白":"诗仙"
		    "年代":"唐"
		  -  
		    "杜甫":"诗圣"
		    "年代":"唐"
		  -
		    "白居易":"诗魔"
		    "年代":"唐"

四 : jinja2介绍
	是基于Python的模板引擎,包含变量和表达式两部分
	playbook的模板使用Python的jinja2模板来处理
	模板表达式包含在分隔符"{{  }}"内
	控制语句包含在"{%  %}"内
	注释包含在"{#   #}"内
	调用变量 {{变量名}}
	计算  {{2+3}}
	判断  {{1 in [1,2,3]}}
	过滤器 "|" 前一个输出作为下一个输入
	jinja2过滤器在线文档
		http://docs.jinkan.org/docs/jinja2/templates.html

五 : playbook练习
	[root@ansible ~]# vim ping.yml	
		---
		- hosts: all
		  remote_user: root
		  tasks:
			- ping:
	[root@ansible ~]# ansible-playbook ping.yml

	练习一 : 安装httpd,修改端口8080 设置默认主页,启动服务,开机自启
		---
		- hosts: web
		  remote_user: root
		  tasks:
			- name: anzhuang
			  yum:
				name: httpd
				state: installed
			- name: zhuyemian
			  shell:
				echo "hello world" > /var/www/html/index.html
			- name: xiugai8080
			  lineinfile:
				path: /etc/httpd/conf/httpd.conf
				regexp: ^Listen
				line: Listen 8080
			- name: qidong
			  service:
				name: httpd
				enabled: yes
				state: started

	练习二 : 创建用户利用传参
		[root@ansible ~]# vim user.yml
		---
		- hosts: web
		  remote_user: root
		  tasks:
			- name: adduser "{{username}}"
			  user:
				name: "{{username}}"
				group: users
				password: "{{'123qqq...A'|password_hash('sha512')}}"
		[root@ansible ~]# ansible-playbook user.yml -e '{"username": plj}'		//使用json方式传参
		[root@ansible ~]# vim args.yml		
		---
		username:
		  plj
		[root@ansible ~]# ansible-playbook user.yml -e @args.yml		//使用yaml方式传参@链接文件(需提前编写)

	练习三: tags标示练习
		[root@ansible ~]# vim http_conf.yml		//编辑yaml文件
			---
			- hosts: web
			  remote_user: root
			  tasks:
				- copy:
					src: httpd.conf
					dest: /etc/httpd/conf/httpd.conf
					owner: root
					group: root
					mode: 0644
				  tags: conf		//添加标签
				  notify:			//触发操作
					- roload apache
				- copy:
					src: index.html
					dest: /var/www/html/index.html
					owner: apache
					group: apache
					mode: 0644
				  tags: index
			  handlers:			//定义触发操作
				- name: reload apache
				  service:
					name: httpd
					state: restarted

		[root@ansible ~]# ansible-playbook http_conf.yml -t conf		//运行测试
		[root@ansible ~]# ansible-playbook http_conf.yml -t index		//运行测试
		
	练习四: when  register 当系统负载大于0.5时关闭httpd服务
		[root@ansible ~]# vim load.yml
			---
			- hosts: web
			  remote_user: root
			  tasks:
				- shell: uptime | awk '{printf("%.2f",$(NF-2))}'
				  register: result
				- service:
					name: httpd
					state: stopped
				  when: result.stdout|float > 0.5
				- name: show debug info		//显示debug详细信息
      	        debug: var=result			//显示变量result详细信息
		[root@ansible ~]# ansible-playbook load.yml

	练习五: with_item 创建多用户
		---
		- hosts: web
		  remote_user: root
		  tasks:
			- name: adduser "{{item}}"
			  user:
				name: "{{item}}"
				group: users
				password: "{{'123qqq...A'|password_hash('sha512')}}"
			  with_items: ["aa","bb","cc","dd"]		//逐一创建用户

			with_item进阶: 结合JSON批量添加用户,设置密码及加入到某一个组中
			---
			- hosts: web
			  remote_user: root
			  tasks:
				- name: adduser "{{item.name}}"
				  user:
					name: "{{item.name}}"
					group: "{{item.group}}"
					password: "{{'123qqq...A'|password_hash('sha512')}}"
				  with_items:
				   - {name: 'ee',group: 'root'}
				   - {name: 'ff',group: 'bin'}
				   - {name: 'gg',group: 'ftp'}
				   - {name: 'hh',group: 'adm'}

	练习六: debug调试模块
		显示受到影响的主机   --list-hosts
			[root@ansible ~]# ansible-playbook http_conf.yml -t  conf --list-hosts
		显示工作的task(命令)  --list-tasks
			[root@ansible ~]# ansible-playbook http_conf.yml -t  conf --list-task
		显示将要运行的tag   --list-tags
			[root@ansible ~]# ansible-playbook http_conf.yml -t index --list-tags	





































